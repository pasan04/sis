-- MySQL dump 10.13  Distrib 5.7.25, for Linux (x86_64)
--
-- Host: 127.0.0.1    Database: openemis
-- ------------------------------------------------------
-- Server version	5.7.25

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `batch_reports`
--

DROP TABLE IF EXISTS `batch_reports`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `batch_reports` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(250) NOT NULL,
  `query` text,
  `template` text,
  `order` int(3) NOT NULL,
  `report_id` int(11) NOT NULL,
  `modified_user_id` int(11) DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `created_user_id` int(11) NOT NULL,
  `created` datetime NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=3003 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `batch_reports`
--

LOCK TABLES `batch_reports` WRITE;
/*!40000 ALTER TABLE `batch_reports` DISABLE KEYS */;
INSERT INTO `batch_reports` VALUES (11,'Institution Site List','$data = $this->InstitutionSite->find(\'all\',array(\'fields\'=>array(\'InstitutionSite.Code AS Code\',\'InstitutionSite.name AS InstitutionName\',\'InstitutionSite.address AS Address\',\'InstitutionSite.postal_code AS PostalCode\',\'InstitutionSite.contact_person AS ContactPerson\',\'InstitutionSite.telephone AS Telephone\',\'InstitutionSite.fax AS Fax\',\'InstitutionSite.email AS Email\',\'InstitutionSite.website AS Website\',\'InstitutionSite.date_opened AS DateOpened\',\'InstitutionSite.date_closed AS DateClosed\',\'InstitutionSite.longitude AS Longitude\',\'InstitutionSite.latitude AS Latitude\',\'Area.name AS AreaName\',\'InstitutionSiteLocality.name AS Locality\',\'InstitutionSiteType.name AS SiteType\',\'InstitutionSiteOwnership.name AS Ownership\',\'InstitutionSiteStatus.name AS Status\'),{cond}));','Code,InstitutionName,Address,PostalCode,ContactPerson,Telephone,Fax,Email,Website,DateOpened,DateClosed,Longitude,Latitude,AreaName,Locality,SiteType,Ownership,Status',1,11,NULL,NULL,1,'0000-00-00 00:00:00'),(13,'Institution Site Custom Field Report','$this->InstitutionSiteCustomValue->formatResult=true;\n$data = $this->InstitutionSiteCustomValue->find(\'all\',array(\n\'recursive\'=>-1,\n\'fields\'=>array(\'InstitutionSite.name AS InstitutionName\',\'InstitutionSiteCustomField.name AS Information\',\'InstitutionSiteCustomField.type AS Type\',\'InstitutionSiteCustomValue.value AS Value\',\'InstitutionSiteCustomFieldOption.value AS Option\'),\n\'joins\'=>array(\n	array(\n		\'table\' => \'institution_site_custom_fields\',\n		\'alias\' => \'InstitutionSiteCustomField\',\n		\'conditions\' => array(\'InstitutionSiteCustomValue.institution_site_custom_field_id = InstitutionSiteCustomField.id\')\n	),\n	array(\n		\'table\' => \'institution_site_custom_field_options\',\n		\'alias\' => \'InstitutionSiteCustomFieldOption\',\n		\'type\' => \'LEFT\',\n		\'conditions\' => array(\'InstitutionSiteCustomValue.value = InstitutionSiteCustomFieldOption.id\')\n	),\n	array(\n		\'table\' => \'institution_sites\',\n		\'alias\' => \'InstitutionSite\',\n		\'conditions\' => array(\'InstitutionSiteCustomValue.institution_site_id = InstitutionSite.id\')\n	)\n),\n\'order\'=>array(\'InstitutionSite.id\', \'InstitutionSiteCustomField.id\'),\n{cond}));\n\nforeach($data as $key => &$value) { \nif ($value[\'Type\'] != 2 && $value[\'Type\'] != 5 && $value[\'Type\'] != 1) { \n$value[\'Value\'] = $value[\'Option\']; }}','InstitutionName,Information,Value',1,13,NULL,NULL,1,'0000-00-00 00:00:00'),(14,'Institution Site Bank Accounts','$data = $this->InstitutionSiteBankAccount->find(\'all\',array(\'fields\'=>array(\'InstitutionSite.name AS InstitutionName\',\'InstitutionSiteBankAccount.account_name AS BankAccountName\',\'InstitutionSiteBankAccount.account_number AS BankAccountNumber\',\'InstitutionSiteBankAccount.active AS BankAccountActive\',\'BankBranch.name AS BankBranchName\'),{cond}));','InstitutionName,BankAccountName,BankAccountNumber,BankAccountActive,BankBranchName',1,14,NULL,NULL,1,'0000-00-00 00:00:00'),(15,'Institution Site Programmes','$this->InstitutionSiteProgramme->formatResult = true;$data = $this->InstitutionSiteProgramme->find(\'all\',array(\'recursive\'=>-1,\'fields\'=>array(\'InstitutionSite.name AS InstitutionName\',\'SchoolYear.name AS SchoolYear\',\'EducationProgramme.name AS EducationProgrammeName\'),\n\'joins\'=>array(array(\'table\' => \'school_years\',\'alias\' => \'SchoolYear\',\'conditions\' => array(\'InstitutionSiteProgramme.school_year_id = SchoolYear.id\')),array(\'table\' => \'education_programmes\',\'alias\' => \'EducationProgramme\',\'conditions\' => array(\'InstitutionSiteProgramme.education_programme_id = EducationProgramme.id\')),array(\'table\' => \'institution_sites\',\'alias\' => \'InstitutionSite\',\'conditions\' => array(\'InstitutionSiteProgramme.institution_site_id = InstitutionSite.id\'))),\n\'conditions\'=>array(\'InstitutionSiteProgramme.status = 1\'),\n{cond}));','InstitutionName,SchoolYear,EducationProgrammeName',1,15,NULL,NULL,1,'0000-00-00 00:00:00'),(21,'Verification Report','$this->InstitutionSite->formatResult = true;\r\n$data = $this->InstitutionSite->find(\'all\', array(\r\n	\'recursive\' => -1,\r\n	\'fields\' => array(\r\n		\'InstitutionSite.code AS InstitutionCode\',\r\n		\'InstitutionSite.name AS InstitutionName\',\r\n		\'SchoolYear.name AS SchoolYear\',\r\n		\"IF(CensusVerification.status=1, \'Verified\', \'Not Verified\') AS Status\",\r\n		\"CONCAT(SecurityUser.first_name, \' \', SecurityUser.last_name) AS LastUpdatedBy\"\r\n	),\r\n	\'joins\' => array(\r\n		array(\r\n			\'table\' => \'school_years\',\r\n			\'alias\' => \'SchoolYear\',\r\n			\'type\' => \'CROSS\',\r\n			\'conditions\' => array(\'1 = 1\')\r\n		),\r\n		array(\r\n			\'table\' => \'census_verifications\',\r\n			\'alias\' => \'CensusVerification\',\r\n			\'type\' => \'LEFT\',\r\n			\'conditions\' => array(\r\n				\'CensusVerification.institution_site_id = InstitutionSite.id\',\r\n				\'CensusVerification.school_year_id = SchoolYear.id\'\r\n			)\r\n		),\r\n		array(\r\n			\'table\' => \'census_verifications\',\r\n			\'alias\' => \'CensusVerification2\',\r\n			\'type\' => \'LEFT\',\r\n			\'conditions\' => array(\r\n				\'CensusVerification2.school_year_id = CensusVerification.school_year_id\',\r\n				\'CensusVerification2.institution_site_id = CensusVerification.institution_site_id\',\r\n				\'CensusVerification2.created > CensusVerification.created\'\r\n			)\r\n		),\r\n		array(\r\n			\'table\' => \'security_users\',\r\n			\'alias\' => \'SecurityUser\',\r\n			\'type\' => \'LEFT\',\r\n			\'conditions\' => array(\'SecurityUser.id = CensusVerification.created_user_id\')\r\n		)\r\n	),\r\n	\'order\' => array(\'InstitutionSite.name\', \'SchoolYear.name\', \'CensusVerification.created\'),\r\n	\'conditions\' => array(\'CensusVerification2.id IS NULL\'),\r\n	{cond}\r\n));','InstitutionCode,InstitutionName,SchoolYear,Status,LastUpdatedBy',1,21,NULL,NULL,1,'0000-00-00 00:00:00'),(22,'Student Report','$this->CensusStudent->formatResult = true; \n$data = $this->CensusStudent->find(\'all\',array(\n\'recursive\' => -1, \n\'fields\'=>array(\'SchoolYear.name AS AcademicYear\',\'InstitutionSite.name AS InstitutionName\',\'EducationGrade.name AS EducationGradeName\',\'StudentCategory.name AS Category\',\'Gender.name AS Gender\',\'CensusStudent.value AS Student\'),\n\'joins\'=>array(\n	array(\n		\'table\' => \'school_years\',\n		\'alias\' => \'SchoolYear\',\n		\'conditions\' => array(\'CensusStudent.school_year_id = SchoolYear.id\')\n	),\n	array(\n		\'table\' => \'institution_sites\',\n		\'alias\' => \'InstitutionSite\',\n		\'conditions\' => array(\'CensusStudent.institution_site_id = InstitutionSite.id\')\n	),\n	array(\n		\'table\' => \'education_grades\',\n		\'alias\' => \'EducationGrade\',\n		\'conditions\' => array(\'CensusStudent.education_grade_id = EducationGrade.id\')\n	),\n	array(\n		\'table\' => \'student_categories\',\n		\'alias\' => \'StudentCategory\',\n		\'conditions\' => array(\'CensusStudent.student_category_id = StudentCategory.id\')\n	),\n	array(\n		\'table\' => \'field_option_values\',\n		\'alias\' => \'Gender\',\n		\'conditions\' => array(\'CensusStudent.gender_id = Gender.id\')\n	)\n),\n\'order\' => array(\'SchoolYear.name\', \'InstitutionSite.id\', \'EducationGrade.order\', \'StudentCategory.order\', \'Gender.id\'),\n{cond}));','AcademicYear,InstitutionName,EducationGradeName,Category,Gender,Student',1,22,NULL,NULL,1,'0000-00-00 00:00:00'),(24,'Training Report','$data = $this->CensusTeacherTraining->find(\'all\',array(\'fields\'=>array(\'SchoolYear.name AS AcademicYear\',\'InstitutionSite.name AS InstitutionName\',\'EducationLevel.name AS EducationLevelName\',\'CensusTeacherTraining.male AS Male\',\'CensusTeacherTraining.female AS Female\'),{cond}));','AcademicYear,InstitutionName,EducationLevelName,Male,Female',1,24,NULL,NULL,1,'0000-00-00 00:00:00'),(25,'Staff Report','\n$this->CensusStaff->formatResult = true;\n$data = $this->CensusStaff->find(\'all\',array(\n\'recursive\'=>-1,\n\'fields\'=>array(\'SchoolYear.name AS AcademicYear\',\'InstitutionSite.name AS InstitutionName\',\'StaffPositionTitle.name AS Position\',\'Gender.name AS Gender\',\'CensusStaff.value AS Staff\'),\n\'joins\' => array(\narray(\'table\' => \'staff_position_titles\',\'alias\' => \'StaffPositionTitle\',\'conditions\' => array(\'CensusStaff.staff_position_title_id = StaffPositionTitle.id\')),\narray(\'table\' => \'field_option_values\',\'alias\' => \'Gender\',\'conditions\' => array(\'CensusStaff.gender_id = Gender.id\')),\narray(\'table\' => \'institution_sites\',\'alias\' => \'InstitutionSite\',\'conditions\' => array(\'CensusStaff.institution_site_id = InstitutionSite.id\')),\narray(\'table\' => \'school_years\',\'alias\' => \'SchoolYear\',\'conditions\' => array(\'CensusStaff.school_year_id = SchoolYear.id\'))\n),\n\'order\' => array(\'SchoolYear.name\', \'InstitutionSite.id\', \'StaffPositionTitle.id\', \'Gender.id\'), {cond} ));','AcademicYear,InstitutionName,Position,Gender,Staff',1,25,NULL,NULL,1,'0000-00-00 00:00:00'),(26,'Class Report','$data = $this->CensusClass->find(\'all\', array(\r\n			\'recursive\' => -1,\r\n			\'fields\' => array(\r\n				\'SchoolYear.name AS AcademicYear\',\r\n				\'InstitutionSite.name AS InstitutionName\',\r\n				\'CensusClass.classes AS Classes\',\r\n				\'CensusClass.seats AS Seats\'\r\n			),\r\n			\'joins\' => array(\r\n				array(\r\n					\'table\' => \'institution_sites\',\r\n					\'alias\' => \'InstitutionSite\',\r\n					\'conditions\' => array(\'InstitutionSite.id = CensusClass.institution_site_id\')\r\n				),\r\n				array(\r\n					\'table\' => \'school_years\',\r\n					\'alias\' => \'SchoolYear\',\r\n					\'conditions\' => array(\'SchoolYear.id = CensusClass.school_year_id\')\r\n				)\r\n			),{cond}\r\n		));','AcademicYear,InstitutionName,Classes,Seats',1,26,NULL,NULL,1,'0000-00-00 00:00:00'),(27,'Graduate Report','$CensusGraduate = ClassRegistry::init(\'CensusGraduate\');\r\n$CensusGraduate->formatResult = true;\r\n		$data = $CensusGraduate->find(\'all\', array(\r\n			\'recursive\' => -1,\r\n			\'fields\' => array(\r\n				\'SchoolYear.name AS AcademicYear\',\r\n				\'InstitutionSite.name AS InstitutionName\',\r\n				\'EducationProgramme.name AS EducationProgramme\',\r\n				\'CensusGraduate.male AS Male\',\r\n				\'CensusGraduate.female AS Female\'\r\n			),\r\n			\'joins\' => array(\r\n				array(\r\n					\'table\' => \'institution_sites\',\r\n					\'alias\' => \'InstitutionSite\',\r\n					\'conditions\' => array(\'InstitutionSite.id = CensusGraduate.institution_site_id\')\r\n				),\r\n				array(\r\n					\'table\' => \'school_years\',\r\n					\'alias\' => \'SchoolYear\',\r\n					\'conditions\' => array(\'SchoolYear.id = CensusGraduate.school_year_id\')\r\n				),\r\n				array(\r\n					\'table\' => \'education_programmes\',\r\n					\'alias\' => \'EducationProgramme\',\r\n					\'conditions\' => array(\'EducationProgramme.id = CensusGraduate.education_programme_id\')\r\n				)\r\n			),{cond}\r\n		));','AcademicYear,InstitutionName,EducationProgramme,Male,Female',1,27,NULL,NULL,1,'0000-00-00 00:00:00'),(28,'Attendance Report','$CensusAttendance = ClassRegistry::init(\'CensusAttendance\');\r\n		$CensusAttendance->formatResult = true;\r\n		$data = $CensusAttendance->find(\'all\', array(\r\n			\'recursive\' => -1,\r\n			\'fields\' => array(\r\n				\'SchoolYear.name AS AcademicYear\',\r\n				\'InstitutionSite.name AS InstitutionName\',\r\n				\'EducationProgramme.name AS EducationProgramme\',\r\n				\'EducationGrade.name AS EducationGrade\',\r\n				\'CensusAttendance.attended_male AS MaleAttended\',\r\n				\'CensusAttendance.attended_female AS FemaleAttended\',\r\n				\'CensusAttendance.absent_male AS MaleAbsent\',\r\n				\'CensusAttendance.absent_female AS FemaleAbsent\'\r\n			),\r\n			\'joins\' => array(\r\n				array(\r\n					\'table\' => \'institution_sites\',\r\n					\'alias\' => \'InstitutionSite\',\r\n					\'conditions\' => array(\'InstitutionSite.id = CensusAttendance.institution_site_id\')\r\n				),\r\n				array(\r\n					\'table\' => \'school_years\',\r\n					\'alias\' => \'SchoolYear\',\r\n					\'conditions\' => array(\'SchoolYear.id = CensusAttendance.school_year_id\')\r\n				),\r\n				array(\r\n					\'table\' => \'education_grades\',\r\n					\'alias\' => \'EducationGrade\',\r\n					\'conditions\' => array(\'EducationGrade.id = CensusAttendance.education_grade_id\')\r\n				),\r\n				array(\r\n					\'table\' => \'education_programmes\',\r\n					\'alias\' => \'EducationProgramme\',\r\n					\'conditions\' => array(\'EducationProgramme.id = EducationGrade.education_programme_id\')\r\n				)\r\n			),{cond}\r\n		));','AcademicYear,InstitutionName,EducationProgramme,EducationGrade,MaleAttended,FemaleAttended,MaleAbsent,FemaleAbsent',1,28,NULL,NULL,1,'0000-00-00 00:00:00'),(29,'Assessment Report','$CensusAssessment = ClassRegistry::init(\'CensusAssessment\');\r\n		$CensusAssessment->formatResult = true;\r\n		$data = $CensusAssessment->find(\'all\', array(\r\n			\'recursive\' => -1,\r\n			\'fields\' => array(\r\n				\'SchoolYear.name AS AcademicYear\',\r\n				\'InstitutionSite.name AS InstitutionName\',\r\n				\'EducationProgramme.name AS EducationProgramme\',\r\n				\'EducationGrade.name AS EducationGrade\',\r\n				\'EducationSubject.name AS EducationSubject\',\r\n				\'CensusAssessment.value AS Score\'\r\n			),\r\n			\'joins\' => array(\r\n				array(\r\n					\'table\' => \'institution_sites\',\r\n					\'alias\' => \'InstitutionSite\',\r\n					\'conditions\' => array(\'InstitutionSite.id = CensusAssessment.institution_site_id\')\r\n				),\r\n				array(\r\n					\'table\' => \'school_years\',\r\n					\'alias\' => \'SchoolYear\',\r\n					\'conditions\' => array(\'SchoolYear.id = CensusAssessment.school_year_id\')\r\n				),\r\n				array(\r\n					\'table\' => \'education_grades_subjects\',\r\n					\'alias\' => \'EducationGradeSubject\',\r\n					\'conditions\' => array(\'EducationGradeSubject.id = CensusAssessment.education_grade_subject_id\')\r\n				),\r\n				array(\r\n					\'table\' => \'education_grades\',\r\n					\'alias\' => \'EducationGrade\',\r\n					\'conditions\' => array(\'EducationGrade.id = EducationGradeSubject.education_grade_id\')\r\n				),\r\n				array(\r\n					\'table\' => \'education_subjects\',\r\n					\'alias\' => \'EducationSubject\',\r\n					\'conditions\' => array(\'EducationSubject.id = EducationGradeSubject.education_subject_id\')\r\n				),\r\n				array(\r\n					\'table\' => \'education_programmes\',\r\n					\'alias\' => \'EducationProgramme\',\r\n					\'conditions\' => array(\'EducationProgramme.id = EducationGrade.education_programme_id\')\r\n				)\r\n			),{cond}\r\n		));','AcademicYear,InstitutionName,EducationProgramme,EducationGrade,EducationSubject,Score',1,29,NULL,NULL,1,'0000-00-00 00:00:00'),(30,'Behaviour Report','$CensusBehaviour = ClassRegistry::init(\'CensusBehaviour\');\r\n		$CensusBehaviour->formatResult = true;\r\n		$data = $CensusBehaviour->find(\'all\', array(\r\n			\'recursive\' => -1,\r\n			\'fields\' => array(\r\n				\'SchoolYear.name AS AcademicYear\',\r\n				\'InstitutionSite.name AS InstitutionName\',\r\n				\'StudentBehaviourCategory.name AS Category\',\r\n				\'CensusBehaviour.male AS Male\',\r\n				\'CensusBehaviour.female AS Female\'\r\n			),\r\n			\'joins\' => array(\r\n				array(\r\n					\'table\' => \'institution_sites\',\r\n					\'alias\' => \'InstitutionSite\',\r\n					\'conditions\' => array(\'InstitutionSite.id = CensusBehaviour.institution_site_id\')\r\n				),\r\n				array(\r\n					\'table\' => \'school_years\',\r\n					\'alias\' => \'SchoolYear\',\r\n					\'conditions\' => array(\'SchoolYear.id = CensusBehaviour.school_year_id\')\r\n				),\r\n				array(\r\n					\'table\' => \'student_behaviour_categories\',\r\n					\'alias\' => \'StudentBehaviourCategory\',\r\n					\'conditions\' => array(\'StudentBehaviourCategory.id = CensusBehaviour.student_behaviour_category_id\')\r\n				)\r\n			),{cond}\r\n		));','AcademicYear,InstitutionName,Category,Male,Female',1,30,NULL,NULL,1,'0000-00-00 00:00:00'),(31,'Textbook Report','$data = $this->CensusTextbook->find(\'all\', array(\r\n			\'recursive\' => -1,\r\n			\'fields\' => array(\r\n				\'SchoolYear.name AS AcademicYear\',\r\n				\'InstitutionSite.name AS InstitutionName\',\r\n				\'EducationSubject.name AS EducationSubjectName\',\r\n				\'CensusTextbook.value AS NoOfTextbooks\'\r\n			),\r\n			\'joins\' => array(\r\n				array(\r\n					\'table\' => \'institution_sites\',\r\n					\'alias\' => \'InstitutionSite\',\r\n					\'conditions\' => array(\'InstitutionSite.id = CensusTextbook.institution_site_id\')\r\n				),\r\n\r\n				array(\r\n					\'table\' => \'education_grades_subjects\',\r\n					\'alias\' => \'EducationGradeSubject\',\r\n					\'conditions\' => array(\'EducationGradeSubject.id = CensusTextbook.education_grade_subject_id\')\r\n				),\r\n				array(\r\n					\'table\' => \'education_subjects\',\r\n					\'alias\' => \'EducationSubject\',\r\n					\'conditions\' => array(\'EducationSubject.id = EducationGradeSubject.education_subject_id\')\r\n				),\r\n				array(\r\n					\'table\' => \'school_years\',\r\n					\'alias\' => \'SchoolYear\',\r\n					\'conditions\' => array(\'SchoolYear.id = CensusTextbook.school_year_id\')\r\n				)\r\n			),{cond}\r\n		));','AcademicYear,InstitutionName,EducationSubjectName,NoOfTextbooks',1,31,NULL,NULL,1,'0000-00-00 00:00:00'),(32,'Custom Field Report','$this->CensusCustomField->unbindModel(array(\'hasMany\' => array(\'CensusCustomFieldOption\')));\r\n$this->CensusCustomValue->bindModel(array(\r\n           \'belongsTo\'=> array(\r\n                \'SchoolYear\' => array(\'foreignKey\' => \'school_year_id\'),\r\n            	\'CensusCustomFieldOption\' => array(\r\n            		\'joinTable\'  => \'census_custom_field_options\',\r\n                    \'foreignKey\' => false,\r\n                    \'conditions\' => array(\' CensusCustomFieldOption.id = CensusCustomValue.value \')\r\n                ),\r\n            )\r\n));\r\n$data = $this->CensusCustomValue->find(\'all\',array(\'fields\'=>array(\'SchoolYear.name AS AcademicYear\',\'InstitutionSite.name AS InstitutionName\',\'CensusCustomField.name AS Information\',\'CensusCustomField.type AS Type\',\'CensusCustomValue.value AS Value\',\'CensusCustomFieldOption.value AS Option\'),{cond}));foreach($data as $key => &$value) { if ($value[\'CensusCustomField\'][\'Type\'] != 2 && $value[\'CensusCustomField\'][\'Type\'] != 5) { $value[\'CensusCustomValue\'][\'Value\'] = $value[\'CensusCustomFieldOption\'][\'Option\']; }}','AcademicYear,InstitutionName,Information,Value',1,32,NULL,NULL,1,'0000-00-00 00:00:00'),(33,'Custom Table Report','$this->CensusGridValue->bindModel(array( \'belongsTo\'=> array( \'SchoolYear\' => array(\'foreignKey\' => \'school_year_id\'), \'CensusGrid\', \'CensusGridXCategory\', \'CensusGridYCategory\', \'InstitutionSite\'=>array(\'foreignKey\' => \'institution_site_id\') ) )); $data = $this->CensusGridValue->find(\'all\',array(\'fields\'=>array(\'SchoolYear.name AS AcademicYear\',\'InstitutionSite.name AS InstitutionName\',\'CensusGridXCategory.name AS GridXCategory\',\'CensusGridYCategory.name AS GridYCategory\',\'CensusGridValue.value AS Value\'),{cond}));','AcademicYear,InstitutionName,GridXCategory,GridYCategory,Value',1,33,NULL,NULL,1,'0000-00-00 00:00:00'),(51,'Building Report','$this->CensusBuilding->bindModel(array( \'belongsTo\'=> array( \'SchoolYear\' => array(\'foreignKey\' => \'school_year_id\'), \'InfrastructureStatus\' => array(\'foreignKey\' => \'infrastructure_status_id\'), \'InstitutionSite\'=>array(\'foreignKey\' => \'institution_site_id\') ) )); $data = $this->CensusBuilding->find(\'all\',array(\'fields\'=>array(\'SchoolYear.name AS AcademicYear\',\'InstitutionSite.name AS InstitutionName\',\'InfrastructureBuilding.name AS Building\',\'InfrastructureMaterial.name AS Material\',\'InfrastructureStatus.name AS Status\',\'CensusBuilding.value AS Value\'),{cond}));','AcademicYear,InstitutionName,Building,Material,Status,Value',1,51,NULL,NULL,1,'0000-00-00 00:00:00'),(52,'Room Report','$this->CensusRoom->bindModel(array( \'belongsTo\'=> array( \'SchoolYear\' => array(\'foreignKey\' => \'school_year_id\'), \'InfrastructureStatus\' => array(\'foreignKey\' => \'infrastructure_status_id\'), \'InstitutionSite\'=>array(\'foreignKey\' => \'institution_site_id\') ) )); $data = $this->CensusRoom->find(\'all\',array(\'fields\'=>array(\'SchoolYear.name AS AcademicYear\',\'InstitutionSite.name AS InstitutionName\',\'InfrastructureRoom.name AS Room\',\'InfrastructureStatus.name AS Status\',\'CensusRoom.value AS Value\'),{cond}));','AcademicYear,InstitutionName,Room,Status,Value',1,52,NULL,NULL,1,'0000-00-00 00:00:00'),(53,'Sanitation Report','$this->CensusSanitation->bindModel(array( \'belongsTo\'=> array( \'SchoolYear\' => array(\'foreignKey\' => \'school_year_id\'), \'InfrastructureStatus\' => array(\'foreignKey\' => \'infrastructure_status_id\'), \'InstitutionSite\'=>array(\'foreignKey\' => \'institution_site_id\') ) )); $data = $this->CensusSanitation->find(\'all\',array(\'fields\'=>array(\'SchoolYear.name AS AcademicYear\',\'InstitutionSite.name AS InstitutionName\',\'InfrastructureSanitation.name AS Sanitation\',\'InfrastructureStatus.name AS Status\',\'CensusSanitation.unisex AS Unisex\',\'CensusSanitation.male AS Male\',\'CensusSanitation.female AS Female\'),{cond}));','AcademicYear,InstitutionName,Sanitation,Status,Unisex,Male,Female',1,53,NULL,NULL,1,'0000-00-00 00:00:00'),(54,'Furniture Report','$this->CensusFurniture->bindModel(array( \'belongsTo\'=> array( \'SchoolYear\' => array(\'foreignKey\' => \'school_year_id\'), \'InfrastructureFurniture\' => array(\'foreignKey\' => \'infrastructure_furniture_id\'), \'InfrastructureStatus\' => array(\'foreignKey\' => \'infrastructure_status_id\'), \'InstitutionSite\'=>array(\'foreignKey\' => \'institution_site_id\') ) )); $data = $this->CensusFurniture->find(\'all\',array(\'fields\'=>array(\'SchoolYear.name AS AcademicYear\',\'InstitutionSite.name AS InstitutionName\',\'InfrastructureFurniture.name AS Furniture\',\'InfrastructureStatus.name AS Status\',\'CensusFurniture.value AS Value\'),{cond}));','AcademicYear,InstitutionName,Furniture,Status,Value',1,54,NULL,NULL,1,'0000-00-00 00:00:00'),(55,'Resource Report','$this->CensusResource->bindModel(array( \'belongsTo\'=> array( \'SchoolYear\' => array(\'foreignKey\' => \'school_year_id\'), \'InfrastructureResource\' => array(\'foreignKey\' => \'infrastructure_resource_id\'), \'InfrastructureStatus\' => array(\'foreignKey\' => \'infrastructure_status_id\'), \'InstitutionSite\'=>array(\'foreignKey\' => \'institution_site_id\') ) )); $data = $this->CensusResource->find(\'all\',array(\'fields\'=>array(\'SchoolYear.name AS AcademicYear\',\'InstitutionSite.name AS InstitutionName\',\'InfrastructureResource.name AS Resource\',\'InfrastructureStatus.name AS Status\',\'CensusResource.value AS Value\'),{cond}));','AcademicYear,InstitutionName,Resource,Status,Value',1,55,NULL,NULL,1,'0000-00-00 00:00:00'),(56,'Energy Report','$this->CensusEnergy->bindModel(array( \'belongsTo\'=> array( \'SchoolYear\' => array(\'foreignKey\' => \'school_year_id\'), \'InfrastructureEnergy\' => array(\'foreignKey\' => \'infrastructure_energy_id\'), \'InfrastructureStatus\' => array(\'foreignKey\' => \'infrastructure_status_id\'), \'InstitutionSite\'=>array(\'foreignKey\' => \'institution_site_id\') ) )); $data = $this-> CensusEnergy->find(\'all\',array(\'fields\'=>array(\'SchoolYear.name AS AcademicYear\',\'InstitutionSite.name AS InstitutionName\',\'InfrastructureEnergy.name AS Energy\',\'InfrastructureStatus.name AS Status\',\'CensusEnergy.value AS Value\'),{cond}));','AcademicYear,InstitutionName,Energy,Status,Value',1,56,NULL,NULL,1,'0000-00-00 00:00:00'),(57,'Water Report','$this->CensusWater->bindModel(array( \'belongsTo\'=> array( \'SchoolYear\' => array(\'foreignKey\' => \'school_year_id\'), \'InfrastructureWater\' => array(\'foreignKey\' => \'infrastructure_Water_id\'), \'InfrastructureStatus\' => array(\'foreignKey\' => \'infrastructure_status_id\'), \'InstitutionSite\'=>array(\'foreignKey\' => \'institution_site_id\') ) )); $data = $this->CensusWater->find(\'all\',array(\'fields\'=>array(\'SchoolYear.name AS AcademicYear\',\'InstitutionSite.name AS InstitutionName\',\'InfrastructureWater.name AS Water\',\'InfrastructureStatus.name AS Status\',\'CensusWater.value AS Value\'),{cond}));','AcademicYear,InstitutionName,Water,Status,Value',1,57,NULL,NULL,1,'0000-00-00 00:00:00'),(71,'Income Report','$this->CensusFinance->bindModel(array(\r\n    \'belongsTo\'=> array(\r\n        \'InstitutionSite\' => array(\r\n            \'foreignKey\' => \'institution_site_id\'\r\n        ),\r\n        \'FinanceType\' => array(\r\n            \'joinTable\'  => \'finance_types\',\r\n            \'foreignKey\' => false,\r\n            \'conditions\' => array(\' FinanceType.id = FinanceCategory.finance_type_id \'),\r\n        ),\r\n        \'FinanceNature\' => array(\r\n            \'joinTable\'  => \'finance_natures\',\r\n            \'foreignKey\' => false,\r\n            \'conditions\' => array(\' FinanceNature.id = FinanceType.finance_nature_id \'),\r\n        ),\r\n    )\r\n));\r\n$data = $this->CensusFinance->find(\'all\',array(\'fields\'=>array(\'SchoolYear.name AS AcademicYear\',\'InstitutionSite.name AS InstitutionName\',\'FinanceCategory.name AS Category\',\'FinanceSource.name AS Source\',\'CensusFinance.description AS Description\',\'CensusFinance.amount AS Amount\'), array(\'conditions\' => array(\'FinanceNature.id\' => array(1, 3))),{cond}));','AcademicYear,InstitutionName,Category,Source,Description,Amount',1,71,NULL,NULL,1,'0000-00-00 00:00:00'),(72,'Expenditure Report','$this->CensusFinance->bindModel(array(\r\n    \'belongsTo\'=> array(\r\n        \'InstitutionSite\' => array(\r\n            \'foreignKey\' => \'institution_site_id\'\r\n        ),\r\n        \'FinanceType\' => array(\r\n            \'joinTable\'  => \'finance_types\',\r\n            \'foreignKey\' => false,\r\n            \'conditions\' => array(\' FinanceType.id = FinanceCategory.finance_type_id \'),\r\n        ),\r\n        \'FinanceNature\' => array(\r\n            \'joinTable\'  => \'finance_natures\',\r\n            \'foreignKey\' => false,\r\n            \'conditions\' => array(\' FinanceNature.id = FinanceType.finance_nature_id \'),\r\n        ),\r\n    )\r\n));\r\n$data = $this->CensusFinance->find(\'all\',array(\'fields\'=>array(\'SchoolYear.name AS AcademicYear\',\'InstitutionSite.name AS InstitutionName\',\'FinanceCategory.name AS Category\',\'FinanceSource.name AS Source\',\'CensusFinance.description AS Description\',\'CensusFinance.amount AS Amount\'), array(\'conditions\' => array(\'FinanceNature.id\' => array(2, 4))),{cond}));','AcademicYear,InstitutionName,Category,Source,Description,Amount',1,72,NULL,NULL,1,'0000-00-00 00:00:00'),(81,'Student Report','$this->Student->formatResult = true;\r\n		$data = $this->Student->find(\'all\', array(\r\n			\'fields\' => array(\r\n				\'Student.identification_no AS IdentificationNo\',\r\n				\'Student.first_name AS FirstName\',\r\n				\'Student.last_name AS LastName\',\r\n				\'Student.gender AS Gender\',\r\n				\'Student.date_of_birth AS DateOfBirth\',\r\n				\'Student.address AS Address\',\r\n				\'Student.postal_code AS PostalCode\',\r\n				\'AddressArea.name AS AddressArea\',\r\n				\'BirthplaceArea.name AS BirthplaceArea\'\r\n			),\r\n			\'joins\' => array(\r\n				array(\r\n					\'table\' => \'areas\',\r\n					\'alias\' => \'AddressArea\',\r\n					\'type\' => \'LEFT\',\r\n					\'conditions\' => array(\'AddressArea.id = Student.address_area_id\')\r\n				),\r\n				array(\r\n					\'table\' => \'areas\',\r\n					\'alias\' => \'BirthplaceArea\',\r\n					\'type\' => \'LEFT\',\r\n					\'conditions\' => array(\'BirthplaceArea.id = Student.birthplace_area_id\')\r\n				)\r\n			), {cond}\r\n		));','IdentificationNo,FirstName,LastName,Gender,DateOfBirth,Address,AddressArea,BirthplaceArea,PostalCode',1,81,NULL,NULL,1,'0000-00-00 00:00:00'),(82,'Student Custom Field Report','$this->StudentCustomField->unbindModel(array(\'hasMany\' => array(\'StudentCustomFieldOption\')));\r$this->StudentCustomValue->bindModel(array(\r           \'belongsTo\'=> array(\r                \'Student\' => array(\r                    \'joinTable\'  => \'students\',\r                    \'foreignKey\' => false,\r                    \'conditions\' => array(\' Student.id = StudentCustomValue.student_id \'),\r                ),\r		\'StudentCustomField\' => array(\r                    \'joinTable\' => \'student_custom_fields\',\r                    \'foreignKey\' => false,\r                    \'conditions\' => array(\' StudentCustomField.id = StudentCustomValue.student_custom_field_id\')\r                ),\r            	\'StudentCustomFieldOption\' => array(\r            		\'joinTable\'  => \'student_custom_field_options\',\r                    \'foreignKey\' => false,\r                    \'conditions\' => array(\' StudentCustomFieldOption.id = StudentCustomValue.value \')\r                ),\r		\r            )\r));\r$data = $this->StudentCustomValue->find(\'all\',array(\'fields\'=>array(\'Student.first_name AS FirstName\',\'Student.last_name AS LastName\',\'StudentCustomField.name AS Information\',\'StudentCustomField.type AS Type\',\'StudentCustomValue.value AS Value\',\'StudentCustomFieldOption.value AS Option\'),{cond}));foreach($data as $key => &$value) { if ($value[\'StudentCustomField\'][\'Type\'] != 2 && $value[\'StudentCustomField\'][\'Type\'] != 5) { $value[\'StudentCustomValue\'][\'Value\'] = $value[\'StudentCustomFieldOption\'][\'Option\']; }}','FirstName,LastName,Information,Value',1,82,NULL,NULL,1,'0000-00-00 00:00:00'),(83,'Student Assessment Report','$Result = ClassRegistry::init(\'AssessmentItemResult\');\r\n$Result->formatResult = true;\r\n$data = $Result->find(\'all\', array(\r\n	\'recursive\' => -1,\r\n	\'fields\' => array(\r\n		\'InstitutionSite.name AS InstitutionName\', \'Student.first_name AS StudentFirstName\', \r\n		\'Student.last_name AS StudentLastName\', \'SchoolYear.name AS SchoolYear\',\r\n		\'AssessmentItemType.name AS Assessment\', \'EducationSubject.code AS SubjectCode\', \r\n		\'EducationSubject.name AS Subject\', \'AssessmentItemResult.marks AS Marks\'\r\n	),\r\n	\'joins\' => array(\r\n		array(\r\n			\'table\' => \'assessment_items\',\r\n			\'alias\' => \'AssessmentItem\',\r\n			\'conditions\' => array(\'AssessmentItem.id = AssessmentItemResult.assessment_item_id\')\r\n		),\r\n		array(\r\n			\'table\' => \'assessment_item_types\',\r\n			\'alias\' => \'AssessmentItemType\',\r\n			\'conditions\' => array(\'AssessmentItemType.id = AssessmentItem.assessment_item_type_id\')\r\n		),\r\n		array(\r\n			\'table\' => \'assessment_result_types\',\r\n			\'alias\' => \'AssessmentResultType\',\r\n			\'type\' => \'LEFT\',\r\n			\'conditions\' => array(\'AssessmentResultType.id = AssessmentItemResult.assessment_result_type_id\')\r\n		),\r\n		array(\r\n			\'table\' => \'education_grades_subjects\',\r\n			\'alias\' => \'EducationGradeSubject\',\r\n			\'conditions\' => array(\'EducationGradeSubject.id = AssessmentItem.education_grade_subject_id\')\r\n		),\r\n		array(\r\n			\'table\' => \'education_subjects\',\r\n			\'alias\' => \'EducationSubject\',\r\n			\'conditions\' => array(\'EducationSubject.id = EducationGradeSubject.education_subject_id\')\r\n		),\r\n		array(\r\n			\'table\' => \'students\',\r\n			\'alias\' => \'Student\',\r\n			\'conditions\' => array(\'Student.id = AssessmentItemResult.student_id\')\r\n		),\r\n		array(\r\n			\'table\' => \'institution_sites\',\r\n			\'alias\' => \'InstitutionSite\',\r\n			\'conditions\' => array(\'InstitutionSite.id = AssessmentItemResult.institution_site_id\')\r\n		),\r\n		array(\r\n			\'table\' => \'school_years\',\r\n			\'alias\' => \'SchoolYear\',\r\n			\'conditions\' => array(\'SchoolYear.id = AssessmentItemResult.school_year_id\')\r\n		)\r\n	),\r\n	\'order\' => array(\'InstitutionSite.name\', \'Student.first_name\', \'SchoolYear.start_year DESC\', \'AssessmentItemType.order\', \'EducationSubject.code\'),\r\n	{cond}\r\n));','InstitutionName,StudentFirstName,StudentLastName,SchoolYear,Assessment,SubjectCode,Subject,Marks',1,83,NULL,NULL,1,'0000-00-00 00:00:00'),(101,'Staff Report','$this->Staff->formatResult = true;\r\n		$data = $this->Staff->find(\'all\', array(\r\n			\'fields\' => array(\r\n				\'Staff.identification_no AS IdentificationNo\',\r\n				\'Staff.first_name AS FirstName\',\r\n				\'Staff.last_name AS LastName\',\r\n				\'Staff.gender AS Gender\',\r\n				\'Staff.date_of_birth AS DateOfBirth\',\r\n				\'Staff.address AS Address\',\r\n				\'Staff.postal_code AS PostalCode\',\r\n				\'AddressArea.name AS AddressArea\',\r\n				\'BirthplaceArea.name AS BirthplaceArea\'\r\n			),\r\n			\'joins\' => array(\r\n				array(\r\n					\'table\' => \'areas\',\r\n					\'alias\' => \'AddressArea\',\r\n					\'type\' => \'LEFT\',\r\n					\'conditions\' => array(\'AddressArea.id = Staff.address_area_id\')\r\n				),\r\n				array(\r\n					\'table\' => \'areas\',\r\n					\'alias\' => \'BirthplaceArea\',\r\n					\'type\' => \'LEFT\',\r\n					\'conditions\' => array(\'BirthplaceArea.id = Staff.birthplace_area_id\')\r\n				)\r\n			), {cond}\r\n		));','IdentificationNo,FirstName,LastName,Gender,DateOfBirth,Address,AddressArea,BirthplaceArea,PostalCode',1,101,NULL,NULL,1,'0000-00-00 00:00:00'),(102,'Staff Custom Field Report','$this->StaffCustomField->unbindModel(array(\'hasMany\' => array(\'StaffCustomFieldOption\')));\r$this->StaffCustomValue->bindModel(array(\r           \'belongsTo\'=> array(\r                \'Staff\' => array(\r                    \'joinTable\'  => \'staff\',\r                    \'foreignKey\' => false,\r                    \'conditions\' => array(\' Staff.id = StaffCustomValue.staff_id \'),\r                ),\r                \'StaffCustomFieldOption\' => array(\r                    \'joinTable\'  => \'staff_custom_field_options\',\r                    \'foreignKey\' => false,\r                    \'conditions\' => array(\' StaffCustomFieldOption.id = StaffCustomValue.value \')\r                ),\r		\'StaffCustomField\' => array(\r                    \'joinTable\' => \'staff_custom_fields\',\r                    \'foreignKey\' => false,\r                    \'conditions\' => array(\' StaffCustomField.id = StaffCustomValue.staff_custom_field_id\')\r                )\r            )\r));\r$data = $this->StaffCustomValue->find(\'all\',array(\'fields\'=>array(\'Staff.first_name AS FirstName\',\'Staff.last_name AS LastName\',\'StaffCustomField.name AS Information\',\'StaffCustomField.type AS Type\',\'StaffCustomValue.value AS Value\',\'StaffCustomFieldOption.value AS Option\'),{cond}));foreach($data as $key => &$value) { if ($value[\'StaffCustomField\'][\'Type\'] != 2 && $value[\'StaffCustomField\'][\'Type\'] != 5) { $value[\'StaffCustomValue\'][\'Value\'] = $value[\'StaffCustomFieldOption\'][\'Option\']; }}','FirstName,LastName,Information,Value',1,102,NULL,NULL,1,'0000-00-00 00:00:00'),(111,'Where is My School','$data = $this->InstitutionSite->find(\'all\',{cond});','<Placemark>\r	<name>{InstitutionName}</name>\r	<description><![CDATA[{school_description}]]></description>\r	<styleUrl>#waypoint</styleUrl>\r	<Point><coordinates>{Longitude},{Latitude},0.000000</coordinates></Point>\r</Placemark>',1,111,NULL,NULL,1,'0000-00-00 00:00:00'),(112,'Styles',NULL,'.textLeft { text-align: left; }\n.legend { font-size: 12px; margin-bottom: 10px; }\n.content { margin-left: 20px; page-break-after: always; }\n.title { padding-top: 130px; }\n.ministry { margin-top: 50px; }\n.text { font-size: 60px; }\n.pulication_date { margin-top: 50px; }\n\n.header { font-size: 50px; }\n.items { font-size: 20px; margin-top: 60px; margin-left: 30px; list-style: square; }\n.items div { margin-bottom: 25px; }\n\n.section { margin-top: 40px; page-break-after: always; }\n.section .section_head { font-size: 20px; margin-bottom: 20px; }\n\ntable { width: 100%; border-collapse: collapse; }\ntable, td { border: 1px solid black; }\ntr.head td { background-color: #5B8BAF; color: #FFFFFF; }\ntd, th { text-align: center; padding: 8px; }\ntd.label { width: 200px; background-color:#5B8BAF; color: #FFFFFF; }\ntd.value { text-align: left; }\nfieldset { border: 1px solid #999999; padding: 15px 20px 0 20px; }\nfieldset table { margin-bottom: 20px; }\n.last_element { page-break-after: avoid; }',1,112,NULL,NULL,1,'2013-09-06 00:00:00'),(113,'Cover Page and TOC','$ConfigItem = ClassRegistry::init(\'ConfigItem\');\n$ConfigAttachment = ClassRegistry::init(\'ConfigAttachment\');\n$SchoolYear = ClassRegistry::init(\'SchoolYear\');\n$logoId = $ConfigItem->getValue(\'yearbook_logo\');\n$title = $ConfigItem->getValue(\'yearbook_title\');\n$yearId = $ConfigItem->getValue(\'yearbook_school_year\');\n$ministry = $ConfigItem->getValue(\'yearbook_organization_name\');\n$date = $ConfigItem->getValue(\'yearbook_publication_date\');\n$dateFormat = $ConfigItem->getValue(\'date_format\');\n$date = date($dateFormat, strtotime($date));\n$year = $SchoolYear->field(\'name\', array(\'id\' => $yearId));\n$attachment = $ConfigAttachment->getBase64Encoding($logoId);\n$logo = \'\';\nif($attachment) {\n	$logo = sprintf(\'<img src=\"data:image/%s;base64,%s\" />\', $attachment[\'type\'], $attachment[\'content\']);\n}\n$list = array(\'Administrative Boundaries\', \'General Information\', \'Education Structure\', \'Education Summary\', \'Institution Sites\', \'Students\', \'Teachers\');\n$header = __(\'Table of Contents\');\n$items = \'\';\nforeach($list as $item) {\n	$items .= \'<div>- \' . __($item) . \'</div>\';\n}\n$vars = compact(\'logo\', \'title\', \'year\', \'ministry\', \'date\', \'items\', \'header\');','<div class=\"logo\">[{logo}]</div>\n<div class=\"content title\">\n	<div class=\"text\">[{title}]</div>\n	<div class=\"text\">[{year}]</div>\n	<div class=\"text ministry\">[{ministry}]</div>\n	<div class=\"pulication_date\">[{date}]</div>\n	<div class=\"copyright\">&copy; Copyright</div>\n</div>\n\n<div class=\"content table_of_contents\">\n	<div class=\"header\">[{header}]</div>\n	<div class=\"items\">[{items}]</div>\n</div>',2,112,NULL,NULL,1,'2013-09-06 00:00:00'),(114,'Administrative Boundaries','$AreaLevel = ClassRegistry::init(\'AreaLevel\');\n$Area = ClassRegistry::init(\'Area\');\n$levels = $AreaLevel->find(\'all\', array(\'order\' => array(\'AreaLevel.level\')));\n$header = __(\'Administrative Boundaries\');\n$sectionHead_1 = __(\'Area Levels\');\n$headerList_1 = array(\'Level\', \'Name\');\n$tableHead_1 = \'\';\n$tableData_1 = \'\';\n$levelId = 0;\n$levelName = \'\';\nforeach($headerList_1 as $item) {\n	$tableHead_1 .= sprintf(\'<td>%s</td>\', $item);\n}\nfor($i=0; $i<count($levels); $i++) {\n	$obj = $levels[$i][\'AreaLevel\'];\n	$tableData_1 .= sprintf(\'<tr><td>%s</td><td class=\"textLeft\">%s</td></tr>\', $obj[\'level\'], $obj[\'name\']);\n	if($i==1) {\n		$levelId = $obj[\'id\'];\n		$levelName = $obj[\'name\'];\n	}\n}\n$areas = $Area->find(\'all\', array(\'conditions\' => array(\'Area.area_level_id\' => $levelId), \'order\' => array(\'Area.order\')));\n$sectionHead_2 = __(\'Areas\');\n$headerList_2 = array(\'Area Level\', \'Name\');\n$tableHead_2 = \'\';\n$tableData_2 = \'\';\nforeach($headerList_2 as $item) {\n	$tableHead_2 .= sprintf(\'<td>%s</td>\', $item);\n}\nforeach($areas as $item) {\n	$obj = $item[\'Area\'];\n	$tableData_2 .= sprintf(\'<tr><td>%s</td><td class=\"textLeft\">%s</td></tr>\', $levelName, $obj[\'name\']);\n}\n$vars = compact(\'header\', \'sectionHead_1\', \'tableHead_1\', \'tableData_1\', \'sectionHead_2\', \'tableHead_2\', \'tableData_2\');','<div class=\"content\">\n	<div class=\"header\">[{header}]</div>\n	<div class=\"section\">\n		<div class=\"section_head\">[{sectionHead_1}]</div>\n		<table>\n			<tr class=\"head\">[{tableHead_1}]</tr>\n			[{tableData_1}]\n		</table>\n	</div>\n	<div class=\"section\">\n		<div class=\"section_head\">[{sectionHead_2}]</div>\n		<table>\n			<tr class=\"head\">[{tableHead_2}]</tr>\n			[{tableData_2}]\n		</table>\n	</div>\n</div>',3,112,NULL,NULL,1,'2013-09-06 00:00:00'),(115,'General Information','$InstitutionSite = ClassRegistry::init(\'InstitutionSite\');\n$CensusStudent = ClassRegistry::init(\'CensusStudent\');\n$CensusTeacher = ClassRegistry::init(\'CensusTeacher\');\n$EducationCycle = ClassRegistry::init(\'EducationCycle\');\n$Area = ClassRegistry::init(\'Area\');\n$ConfigItem = ClassRegistry::init(\'ConfigItem\');\n$yearId = $ConfigItem->getValue(\'yearbook_school_year\');\n$areas = $Area->getAreasByLevel(2);\n$header = __(\'General Information\');\n$legend = __(\'I = Institution Sites, S = Students, T = Teachers\');\n$sectionHead_1 = __(\'Summary by Level and Area\');\n$cycleList = $EducationCycle->findList(true);\n$tableHead_1 = \'\';\n$tableData_1 = \'\';\n$category = array(\'I\', \'S\', \'T\');\n$categoryRow = \'<tr><td></td>\';\nforeach($cycleList as $id => $item) {\n	$tableHead_1 .= sprintf(\'<td colspan=\"3\">%s</td>\', $item);\n	foreach($category as $c) {\n		$categoryRow .= \'<td>\' . __($c) . \'</td>\';\n	}\n}\nforeach($areas as $area) {\n	$tableData_1 .= sprintf(\'<tr><td class=\"textLeft\">%s</td>\', $area[\'name\']);\n	foreach($cycleList as $id => $cycle) {\n		$institutionSites = $InstitutionSite->getCountByCycleId($yearId, $id, array(\'areaId\' => $area[\'id\']));\n		$students = $CensusStudent->getCountByCycleId($yearId, $id, array(\'areaId\' => $area[\'id\']));\n		$teachers = $CensusTeacher->getCountByCycleId($yearId, $id, array(\'areaId\' => $area[\'id\']));\n		$tableData_1 .= sprintf(\'<td>%d</td>\', $institutionSites);\n		$tableData_1 .= sprintf(\'<td>%d</td>\', $students[\'M\'] + $students[\'F\']);\n		$tableData_1 .= sprintf(\'<td>%d</td>\', $teachers[\'M\'] + $teachers[\'F\']);\n	}\n	$tableData_1 .= \'</tr>\';\n}\n$categoryRow .= \'</tr>\';\n$tableHead_1 .= $categoryRow;\n\n$PublicExpenditure = ClassRegistry::init(\'PublicExpenditure\');\n$sectionHead_2 = __(\'Summary by Element and Area\');\n$headerList_2 = array(\'GNP\', \'Public Expenditure Total\', \'Public Expenditure Education\');\n$tableHead_2 = \'\';\nforeach($headerList_2 as $id => $item) {\n	$tableHead_2 .= sprintf(\'<td>%s</td>\', __($item));\n}\nforeach($areas as $area) {\n	$data = $PublicExpenditure->geDataByYearAndArea($yearId, $area[\'id\']);\n	$tableData_2 .= sprintf(\n		\'<tr><td class=\"textLeft\">%s</td><td>%d</td><td>%d</td><td>%d</td></tr>\', \n		$area[\'name\'],\n		$data[\'gross_national_product\'],\n		$data[\'total_public_expenditure\'],\n		$data[\'total_public_expenditure_education\']\n	);\n}\n$vars = compact(\'header\', \'legend\', \'sectionHead_1\', \'tableHead_1\', \'tableData_1\', \'sectionHead_2\', \'tableHead_2\', \'tableData_2\');','<div class=\"content\">\n	<div class=\"header\">[{header}]</div>\n	<div class=\"section\">\n		<div class=\"section_head\">[{sectionHead_1}]</div>\n		<div class=\"legend\">[{legend}]</div>\n		<table>\n			<tr class=\"head\"><td>Area</td>[{tableHead_1}]</tr>\n			[{tableData_1}]\n		</table>\n	</div>\n	<div class=\"section\">\n		<div class=\"section_head\">[{sectionHead_2}]</div>\n		<table>\n			<tr class=\"head\"><td>Area</td>[{tableHead_2}]</tr>\n			[{tableData_2}]\n		</table>\n	</div>\n</div>',4,112,NULL,NULL,1,'2013-09-09 00:00:00'),(116,'Education Structure','$EducationProgramme = ClassRegistry::init(\'EducationProgramme\');\n$structure = $EducationProgramme->getEducationStructure();\n$header = __(\'Education Structure\');\n$data = \'\';\n$row = \'<tr><td class=\"label textLeft\">%s</td><td class=\"value\">%s</td></tr>\';\nforeach($structure as $item) {\n	if(!empty($item)) {\n		$data .= sprintf(\'<fieldset><legend>%s</legend>\', $item[0][\'system\']);\n	}\n	foreach($item as $obj) {\n		$data .= \'<table>\';\n		$data .= sprintf($row, __(\'Education Level\'), $obj[\'level\']);\n		$data .= sprintf($row, __(\'Education Cycle\'), $obj[\'cycle\']);\n		$data .= sprintf($row, __(\'Education Programme\'), $obj[\'programme\']);\n		$data .= sprintf($row, __(\'Field of Study\'), $obj[\'field\']);\n		$data .= sprintf($row, __(\'Programme Orientation\'), $obj[\'orientation\']);\n		$data .= sprintf($row, __(\'Certification\'), $obj[\'certification\']);\n		$data .= sprintf($row, __(\'Education Grades\'), implode(\', \', $obj[\'grades\']));\n		$data .= \'</table>\';\n	}\n	if(!empty($item)) {\n		$data .= \'</fieldset>\';\n	}\n}\n$vars = compact(\'header\', \'data\');','<div class=\"content\">\n	<div class=\"header\">[{header}]</div>\n	<div class=\"section\">[{data}]</div>\n</div>',5,112,NULL,NULL,1,'2013-09-10 00:00:00'),(117,'Education Summary','$InstitutionSite = ClassRegistry::init(\'InstitutionSite\');\n$CensusStudent = ClassRegistry::init(\'CensusStudent\');\n$CensusTeacher = ClassRegistry::init(\'CensusTeacher\');\n$CensusStaff = ClassRegistry::init(\'CensusStaff\');\n$EducationCycle = ClassRegistry::init(\'EducationCycle\');\n$Area = ClassRegistry::init(\'Area\');\n$ConfigItem = ClassRegistry::init(\'ConfigItem\');\n$yearId = $ConfigItem->getValue(\'yearbook_school_year\');\n$header = __(\'Education Summary\');\n$sectionHead_1 = __(\'Summary by Element and Level\');\n$cycleList = $EducationCycle->findList(true);\n$headerList_1 = array(\'Level\', \'Institution Sites\', \'Students\', \'Teachers\', \'Staff\');\n$tableHead_1 = \'\';\n$tableData_1 = \'\';\n$col = \'<td>%s</td>\';\nforeach($headerList_1 as $item) {\n	$tableHead_1 .= sprintf($col, __($item));\n}\nforeach($cycleList as $id => $cycle) {\n	$tableData_1 .= \'<tr>\';\n	$tableData_1 .= sprintf(\'<td class=\"textLeft\">%s</td>\', $cycle);\n	$tableData_1 .= sprintf($col, $InstitutionSite->getCountByCycleId($yearId, $id));\n	$students = $CensusStudent->getCountByCycleId($yearId, $id);\n	$tableData_1 .= sprintf($col, $students[\'M\'] + $students[\'F\']);\n	$teachers = $CensusTeacher->getCountByCycleId($yearId, $id);\n	$tableData_1 .= sprintf($col, $teachers[\'M\'] + $teachers[\'F\']);\n	$staff = $CensusStaff->getCountByCycleId($yearId, $id);\n	$tableData_1 .= sprintf($col, $staff[\'M\'] + $staff[\'F\']);\n	$tableData_1 .= \'</tr>\';\n}\n\n$areas = $Area->getAreasByLevel(2);\n$sectionHead_2 = __(\'Summary by Element and Area\');\n$headerList_2 = array(\'Area\', \'Institution Sites\', \'Students\', \'Teachers\', \'Staff\');\n$tableHead_2 = \'\';\n$tableData_2 = \'\';\nforeach($headerList_2 as $item) {\n	$tableHead_2 .= sprintf($col, __($item));\n}\nforeach($areas as $area) {\n	$tableData_2 .= \'<tr>\';\n	$tableData_2 .= sprintf(\'<td class=\"textLeft\">%s</td>\', $area[\'name\']);\n	$tableData_2 .= sprintf($col, $InstitutionSite->getCountByAreaId($yearId, $area[\'id\']));\n	$students = $CensusStudent->getCountByAreaId($yearId, $area[\'id\']);\n	$tableData_2 .= sprintf($col, $students[\'M\'] + $students[\'F\']);\n	$teachers = $CensusTeacher->getCountByAreaId($yearId, $area[\'id\']);\n	$tableData_2 .= sprintf($col, $teachers[\'M\'] + $teachers[\'F\']);\n	$staff = $CensusStaff->getCountByAreaId($yearId, $area[\'id\']);\n	$tableData_2 .= sprintf($col, $staff[\'M\'] + $staff[\'F\']);\n	$tableData_2 .= \'</tr>\';\n}\n$vars = compact(\'header\', \'sectionHead_1\', \'tableHead_1\', \'tableData_1\', \'sectionHead_2\', \'tableHead_2\', \'tableData_2\');','<div class=\"content\">\n	<div class=\"header\">[{header}]</div>\n	<div class=\"section\">\n		<div class=\"section_head\">[{sectionHead_1}]</div>\n		<table>\n			<tr class=\"head\">[{tableHead_1}]</tr>\n			[{tableData_1}]\n		</table>\n	</div>\n	<div class=\"section\">\n		<div class=\"section_head\">[{sectionHead_2}]</div>\n		<table>\n			<tr class=\"head\">[{tableHead_2}]</tr>\n			[{tableData_2}]\n		</table>\n	</div>\n</div>',6,112,NULL,NULL,1,'2013-09-10 00:00:00'),(118,'Institution Sites','$InstitutionSite = ClassRegistry::init(\'InstitutionSite\');\r\n$EducationCycle = ClassRegistry::init(\'EducationCycle\');\r\n$Provider = $InstitutionSite->InstitutionSiteProvider;\r\n$Area = ClassRegistry::init(\'Area\');\r\n$ConfigItem = ClassRegistry::init(\'ConfigItem\');\r\n$yearId = $ConfigItem->getValue(\'yearbook_school_year\');\r\n$header = __(\'Institution Sites\');\r\n$sectionHead_1 = __(\'Summary by Level and Provider\');\r\n$cycleList = $EducationCycle->findList(true);\r\n$providerList = $Provider->findList(true);\r\n$tableHead_1 = \'\';\r\n$tableData_1 = \'\';\r\n$col = \'<td>%s</td>\';\r\nforeach($cycleList as $item) {\r\n	$tableHead_1 .= sprintf($col, $item);\r\n}\r\nforeach($providerList as $providerId => $provider) {\r\n	$tableData_1 .= \'<tr>\';\r\n	$tableData_1 .= sprintf(\'<td class=\"textLeft\">%s</td>\', $provider);\r\n	foreach($cycleList as $cycleId => $cycle) {\r\n		$tableData_1 .= sprintf($col, $InstitutionSite->getCountByCycleId($yearId, $cycleId, array(\'providerId\' => $providerId)));\r\n	}\r\n	$tableData_1 .= \'</tr>\';\r\n}\r\n\r\n$areas = $Area->getAreasByLevel(2);\r\n$sectionHead_2 = __(\'Summary by Level and Area\');\r\nforeach($areas as $area) {\r\n	$tableData_2 .= \'<tr>\';\r\n	$tableData_2 .= sprintf(\'<td class=\"textLeft\">%s</td>\', $area[\'name\']);\r\n	foreach($cycleList as $cycleId => $cycle) {\r\n		$tableData_2 .= sprintf($col, $InstitutionSite->getCountByCycleId($yearId, $cycleId, array(\'areaId\' => $area[\'id\'])));\r\n	}\r\n	$tableData_2 .= \'</tr>\';\r\n}\r\n$vars = compact(\'header\', \'sectionHead_1\', \'tableHead_1\', \'tableData_1\', \'sectionHead_2\', \'tableData_2\');','<div class=\"content\">\n	<div class=\"header\">[{header}]</div>\n	<div class=\"section\">\n		<div class=\"section_head\">[{sectionHead_1}]</div>\n		<table>\n			<tr class=\"head\"><td>Area</td>[{tableHead_1}]</tr>\n			[{tableData_1}]\n		</table>\n	</div>\n	<div class=\"section\">\n		<div class=\"section_head\">[{sectionHead_2}]</div>\n		<table>\n			<tr class=\"head\"><td>Area</td>[{tableHead_1}]</tr>\n			[{tableData_2}]\n		</table>\n	</div>\n</div>',7,112,NULL,NULL,1,'2013-09-10 00:00:00'),(119,'Students','$CensusStudent = ClassRegistry::init(\'CensusStudent\');\r\n$EducationCycle = ClassRegistry::init(\'EducationCycle\');\r\n$InstitutionSite = ClassRegistry::init(\'InstitutionSite\');\r\n$Provider = $InstitutionSite->InstitutionSiteProvider;\r\n$Area = ClassRegistry::init(\'Area\');\r\n$ConfigItem = ClassRegistry::init(\'ConfigItem\');\r\n$gender = array(\'M\', \'F\', \'T\');\r\n$legend = __(\'M = Male, F = Female, T = Total\');\r\n$genderRow = \'<tr><td></td>\';\r\n$yearId = $ConfigItem->getValue(\'yearbook_school_year\');\r\n$header = __(\'Students\');\r\n$sectionHead_1 = __(\'Summary by Level and Provider\');\r\n$cycleList = $EducationCycle->findList(true);\r\n$providerList = $Provider->findList(true);\r\n$tableHead_1 = \'\';\r\n$tableData_1 = \'\';\r\n$col = \'<td>%s</td>\';\r\nforeach($cycleList as $item) {\r\n	$tableHead_1 .= sprintf(\'<td colspan=\"3\">%s</td>\', $item);\r\n	foreach($gender as $g) {\r\n		$genderRow .= \'<td>\' . $g . \'</td>\';\r\n	}\r\n}\r\n$genderRow .= \'</tr>\';\r\n$tableHead_1 .= $genderRow;\r\n\r\nforeach($providerList as $providerId => $provider) {\r\n	$tableData_1 .= \'<tr>\';\r\n	$tableData_1 .= sprintf(\'<td class=\"textLeft\">%s</td>\', $provider);\r\n	foreach($cycleList as $cycleId => $cycle) {\r\n		$data = $CensusStudent->getCountByCycleId($yearId, $cycleId, array(\'providerId\' => $providerId));\r\n		$data[\'T\'] = $data[\'M\'] + $data[\'F\'];\r\n		foreach($gender as $g) {\r\n			$value = empty($data[$g]) ? 0 : $data[$g];\r\n			$tableData_1 .= sprintf($col, $value);\r\n		}\r\n	}\r\n	$tableData_1 .= \'</tr>\';\r\n}\r\n\r\n$areas = $Area->getAreasByLevel(2);\r\n$sectionHead_2 = __(\'Summary by Level and Area\');\r\nforeach($areas as $area) {\r\n	$tableData_2 .= \'<tr>\';\r\n	$tableData_2 .= sprintf(\'<td class=\"textLeft\">%s</td>\', $area[\'name\']);\r\n	foreach($cycleList as $cycleId => $cycle) {\r\n		$data = $CensusStudent->getCountByCycleId($yearId, $cycleId, array(\'areaId\' => $area[\'id\']));\r\n		$data[\'T\'] = $data[\'M\'] + $data[\'F\'];\r\n		foreach($gender as $g) {\r\n			$value = empty($data[$g]) ? 0 : $data[$g];\r\n			$tableData_2 .= sprintf($col, $value);\r\n		}\r\n	}\r\n	$tableData_2 .= \'</tr>\';\r\n}\r\n$vars = compact(\'header\', \'legend\', \'sectionHead_1\', \'tableHead_1\', \'tableData_1\', \'sectionHead_2\', \'tableData_2\');','<div class=\"content\">\n	<div class=\"header\">[{header}]</div>\n	<div class=\"section\">\n		<div class=\"section_head\">[{sectionHead_1}]</div>\n		<div class=\"legend\">[{legend}]</div>\n		<table>\n			<tr class=\"head\"><td>Area</td>[{tableHead_1}]</tr>\n			[{tableData_1}]\n		</table>\n	</div>\n	<div class=\"section\">\n		<div class=\"section_head\">[{sectionHead_2}]</div>\n		<div class=\"legend\">[{legend}]</div>\n		<table>\n			<tr class=\"head\"><td>Area</td>[{tableHead_1}]</tr>\n			[{tableData_2}]\n		</table>\n	</div>\n</div>',8,112,NULL,NULL,1,'2013-09-10 00:00:00'),(120,'Teachers','$CensusTeacher = ClassRegistry::init(\'CensusTeacher\');\r\n$EducationCycle = ClassRegistry::init(\'EducationCycle\');\r\n$InstitutionSite = ClassRegistry::init(\'InstitutionSite\');\r\n$Provider = $InstitutionSite->InstitutionSiteProvider;\r\n$Area = ClassRegistry::init(\'Area\');\r\n$ConfigItem = ClassRegistry::init(\'ConfigItem\');\r\n$gender = array(\'M\', \'F\', \'T\');\r\n$legend = \'M = Male, F = Female, T = Total\';\r\n$genderRow = \'<tr><td></td>\';\r\n$yearId = $ConfigItem->getValue(\'yearbook_school_year\');\r\n$header = __(\'Teachers\');\r\n$sectionHead_1 = __(\'Summary by Level and Provider\');\r\n$cycleList = $EducationCycle->findList(true);\r\n$providerList = $Provider->findList(true);\r\n$tableHead_1 = \'\';\r\n$tableData_1 = \'\';\r\n$col = \'<td>%s</td>\';\r\nforeach($cycleList as $item) {\r\n	$tableHead_1 .= sprintf(\'<td colspan=\"3\">%s</td>\', $item);\r\n	foreach($gender as $g) {\r\n		$genderRow .= \'<td>\' . $g . \'</td>\';\r\n	}\r\n}\r\n$genderRow .= \'</tr>\';\r\n$tableHead_1 .= $genderRow;\r\n\r\nforeach($providerList as $providerId => $provider) {\r\n	$tableData_1 .= \'<tr>\';\r\n	$tableData_1 .= sprintf(\'<td class=\"textLeft\">%s</td>\', $provider);\r\n	foreach($cycleList as $cycleId => $cycle) {\r\n		$data = $CensusTeacher->getCountByCycleId($yearId, $cycleId, array(\'providerId\' => $providerId));\r\n		$data[\'T\'] = $data[\'M\'] + $data[\'F\'];\r\n		foreach($gender as $g) {\r\n			$value = empty($data[$g]) ? 0 : $data[$g];\r\n			$tableData_1 .= sprintf($col, $value);\r\n		}\r\n	}\r\n	$tableData_1 .= \'</tr>\';\r\n}\r\n\r\n$areas = $Area->getAreasByLevel(2);\r\n$sectionHead_2 = __(\'Summary by Level and Area\');\r\nforeach($areas as $area) {\r\n	$tableData_2 .= \'<tr>\';\r\n	$tableData_2 .= sprintf(\'<td class=\"textLeft\">%s</td>\', $area[\'name\']);\r\n	foreach($cycleList as $cycleId => $cycle) {\r\n		$data = $CensusTeacher->getCountByCycleId($yearId, $cycleId, array(\'areaId\' => $area[\'id\']));\r\n		$data[\'T\'] = $data[\'M\'] + $data[\'F\'];\r\n		foreach($gender as $g) {\r\n			$value = empty($data[$g]) ? 0 : $data[$g];\r\n			$tableData_2 .= sprintf($col, $value);\r\n		}\r\n	}\r\n	$tableData_2 .= \'</tr>\';\r\n}\r\n$vars = compact(\'header\', \'legend\', \'sectionHead_1\', \'tableHead_1\', \'tableData_1\', \'sectionHead_2\', \'tableData_2\');','<div class=\"content last_element\">\n	<div class=\"header\">[{header}]</div>\n	<div class=\"section\">\n		<div class=\"section_head\">[{sectionHead_1}]</div>\n		<div class=\"legend\">[{legend}]</div>\n		<table>\n			<tr class=\"head\"><td>Area</td>[{tableHead_1}]</tr>\n			[{tableData_1}]\n		</table>\n	</div>\n	<div class=\"section last_element\">\n		<div class=\"section_head\">[{sectionHead_2}]</div>\n		<div class=\"legend\">[{legend}]</div>\n		<table>\n			<tr class=\"head\"><td>Area</td>[{tableHead_1}]</tr>\n			[{tableData_2}]\n		</table>\n	</div>\n</div>',9,112,NULL,NULL,1,'2013-09-10 00:00:00'),(151,'Non-Responsive Schools Report','$data = $this->InstitutionSite->find(\'all\',array(\'fields\'=>array(\'sc.name as Year\', \'InstitutionSite.Code AS Code\',\'InstitutionSite.name AS InstitutionName\',\'InstitutionSite.address AS Address\',\'InstitutionSite.postal_code AS PostalCode\',\'InstitutionSite.contact_person AS ContactPerson\',\'InstitutionSite.telephone AS Telephone\',\'InstitutionSite.fax AS Fax\',\'InstitutionSite.email AS Email\',\'InstitutionSite.website AS Website\',\'InstitutionSite.date_opened AS DateOpened\',\'InstitutionSite.date_closed AS DateClosed\',\'InstitutionSite.longitude AS Longitude\',\'InstitutionSite.latitude AS Latitude\',\'Area.name AS AreaName\',\'InstitutionSiteLocality.name AS Locality\',\'InstitutionSiteType.name AS SiteType\',\'InstitutionSiteOwnership.name AS Ownership\',\'InstitutionSiteStatus.name AS Status\'),\r\n                \'joins\'=>array(\r\n    array(\'table\' => \'school_years\',\r\n            \'alias\' =>\' sc\',\r\n          \'type\' => \'CROSS\',\r\n            \'conditions\' => array(\r\n          \'\')\r\n         )),\'order\'=>\'sc.name desc\',{cond}));\r\n $exist = $this->CensusStudent->find(\'all\',array(\'fields\'=>array(\'InstitutionSite.Code as code\',\'SchoolYear.Name as name\'),\'group\' => \'InstitutionSite.Code,SchoolYear.Name\'));\r\n foreach ($exist as $k => $v) { $exist[$exist[$k][\'SchoolYear\'][\'name\'].\"-\".$exist[$k][\'InstitutionSite\'][\'code\']] = 1;unset($exist[$k]); } \r\nforeach($data as $k => &$v){ if (isset($exist[$data[$k][\'sc\'][\'Year\'].\"-\".$data[$k][\'InstitutionSite\'][\'Code\']])) { unset($data[$k]); } }','Year,Code,InstitutionName,Address,PostalCode,ContactPerson,Telephone,Fax,Email,Website,DateOpened,DateClosed,Longitude,Latitude,AreaName,Locality,SiteType,Ownership,Status',1,151,NULL,NULL,1,'0000-00-00 00:00:00'),(152,'Data Discrepancy Report','App::import(\'model\',\'ConfigItem\');$ci = new ConfigItem();App::import(\'model\',\'SchoolYear\');$sy = new SchoolYear();$variation=$ci->find(\'first\',array(\'conditions\' => array(\'Name\'=>\'report_discrepancy_variationpercent\',\'Type\' => \'Data Discrepancy\')));$variation=$variation[\'ConfigItem\'][\'value\'];$currentschoolyear = $sy->findByCurrent(\'1\');$currentschoolyear = $currentschoolyear[\'SchoolYear\'][\'id\'];$previousyear = $sy->find(\'neighbors\', array(\'field\' => \'id\', \'value\' => $currentschoolyear));$previousyear=$previousyear[\'prev\'][\'SchoolYear\'][\'id\'];$data = $this->CensusStudent->find(\'all\',array(\'fields\'=>array(\'SchoolYear.name as AcademicYear\',\'EducationGrade.name as EducationGradeName\',\'StudentCategory.name as Category\',\'InstitutionSite.name as InstitutionName\',\'CensusStudent.male as Male\',\'CensusStudent.female as Female\',\'sc.name as PreviousYear\',\'c2.male as PreviousYearMale\',\'c2.female as PreviousYearFemale\'),\'joins\'=>array(array(\'table\' => \'census_students\',\'alias\' =>\' c2\',\'type\' => \'LEFT OUTER\',\'conditions\' => array(\'CensusStudent.institution_site_id = c2.institution_site_id\',\'CensusStudent.education_grade_id = c2.education_grade_id\',\'CensusStudent.student_category_id = c2.student_category_id\',\'CensusStudent.age = c2.age\', \'CensusStudent.school_year_id\' => $currentschoolyear,\'c2.school_year_id\' => $previousyear)),array(\'table\' => \'school_years\',\'alias\' =>\' sc\',\'type\' => \'LEFT\',\'conditions\' => array(\'c2.school_year_id = sc.id\')) ),\'conditions\'=>array(\'(CensusStudent.male+CensusStudent.female) > ((c2.male+c2.female)*((\'.$variation.\'+100)/100))\'), \'order\'=>\'CensusStudent.id desc\',{cond}));','AcademicYear,InstitutionName,EducationGradeName,Category,Male,Female,PreviousYear,PreviousYearMale,PreviousYearFemale',1,152,NULL,NULL,1,'0000-00-00 00:00:00'),(153,'Data Outliers','App::import(\'model\',\'ConfigItem\');$ci = new ConfigItem();\r\n$report_outlier_max_age = $ci->find(\'first\',array(\'conditions\' => array(\'Name\'=>\'report_outlier_max_age\',\'Type\' => \'Data Outliers\')));\r\n$report_outlier_max_age = $report_outlier_max_age[\'ConfigItem\'][\'value\'];\r\n$report_outlier_min_age = $ci->find(\'first\', array(\'conditions\' => array(\'Name\'=>\'report_outlier_min_age\',\'Type\' => \'Data Outliers\')));\r\n$report_outlier_min_age = $report_outlier_min_age[\'ConfigItem\'][\'value\'];\r\n$report_outlier_max_student = $ci->find(\'first\', array(\'conditions\' => array(\'Name\'=>\'report_outlier_max_student\',\'Type\' => \'Data Outliers\')));\r\n$report_outlier_max_student = $report_outlier_max_student[\'ConfigItem\'][\'value\'];\r\n$report_outlier_min_student = $ci->find(\'first\', array(\'conditions\' => array(\'Name\'=>\'report_outlier_min_student\',\'Type\' => \'Data Outliers\')));\r\n$report_outlier_min_student = $report_outlier_min_student[\'ConfigItem\'][\'value\'];\r\n$data = $this->CensusStudent->find(\'all\',array(\'fields\'=>array(\'SchoolYear.name AS AcademicYear\',\'InstitutionSite.name AS InstitutionName\',\'EducationGrade.name AS EducationGradeName\',\'StudentCategory.name AS Category\',\'age\',\'CensusStudent.male AS Male\',\'CensusStudent.female AS Female\'),\'conditions\'=>array(\'OR\'=>array(\'(CensusStudent.Male+CensusStudent.Female) > \'.$report_outlier_max_student,\'(CensusStudent.Male+CensusStudent.Female) < \'.$report_outlier_min_student,\'CensusStudent.age > \' . $report_outlier_max_age,\'CensusStudent.age < \' . $report_outlier_min_age)),{cond}));','AcademicYear,InstitutionName,EducationGradeName,Category,age,Male,Female',1,153,NULL,NULL,1,'0000-00-00 00:00:00'),(154,'Missing Coordinates Report','$data = $this->InstitutionSite->find(\'all\',array(\'fields\'=>array(\'InstitutionSite.name AS InstitutionName\',\'InstitutionSite.longitude AS Longitude\',\'InstitutionSite.latitude AS Latitude\'),{cond}));foreach ($data as $k => $v) { if ((!is_null($data[$k][\'InstitutionSite\'][\'Longitude\']) && $data[$k][\'InstitutionSite\'][\'Longitude\'] != 0) && (!is_null($data[$k][\'InstitutionSite\'][\'Latitude\']) && $data[$k][\'InstitutionSite\'][\'Latitude\'] != 0)) { unset($data[$k]); }}','InstitutionName,Longitude,Latitude',1,154,NULL,NULL,1,'0000-00-00 00:00:00'),(1028,'Student Out Of School Report','$this->Student->formatResult = true;\r\n		$data = $this->Student->find(\'all\', array(\r\n			\'fields\' => array(\r\n				\'Student.identification_no AS IdentificationNo\',\r\n				\'Student.first_name AS FirstName\',\r\n				\'Student.last_name AS LastName\',\r\n				\'Student.gender AS Gender\',\r\n				\'Student.date_of_birth AS DateOfBirth\',\r\n				\'Student.address AS Address\',\r\n				\'Student.postal_code AS PostalCode\',\r\n				\'AddressArea.name AS AddressArea\',\r\n				\'BirthplaceArea.name AS BirthplaceArea\'\r\n			),\r\n			\'joins\' => array(\r\n				array(\r\n					\'table\' => \'areas\',\r\n					\'alias\' => \'AddressArea\',\r\n					\'type\' => \'LEFT\',\r\n					\'conditions\' => array(\'AddressArea.id = Student.address_area_id\')\r\n				),\r\n				array(\r\n					\'table\' => \'areas\',\r\n					\'alias\' => \'BirthplaceArea\',\r\n					\'type\' => \'LEFT\',\r\n					\'conditions\' => array(\'BirthplaceArea.id = Student.birthplace_area_id\')\r\n				),\r\n				array(\r\n					\'table\' => \'institution_site_students\',\r\n					\'alias\' => \'institutionSiteStudent\',\r\n					\'type\' => \'LEFT\',\r\n					\'conditions\' => array(\'institutionSiteStudent.student_id = Student.id\')\r\n				)\r\n			)\r\n			,\'group\' => array(\'Student.id\')\r\n			,\'conditions\' => array(\'OR\'=>array(\'not\' => array(\'institutionSiteStudent.student_status_id\' => \'1\'), \'institutionSiteStudent.student_id\' => NULL))\r\n		));','IdentificationNo,FirstName,LastName,Gender,DateOfBirth,Address,AddressArea,BirthplaceArea,PostalCode',1,1028,NULL,NULL,1,'0000-00-00 00:00:00'),(1029,'Training Course Report','$this->autoRender = false; \r\n        $TrainingCourse = ClassRegistry::init(\'TrainingCourse\');\r\n        $TrainingCourse->formatResult = true;\r\n        $data = $TrainingCourse->find(\'all\', \r\n        array(\'fields\' => array(\r\n            \'TrainingCourse.code AS CourseCode\',\'TrainingCourse.title AS CourseTitle\',\r\n            \'TrainingStatus.name AS Status\',\'TrainingCourse.description as CourseDescription\',\r\n            \'TrainingCourse.objective AS GoalObjective\',\'TrainingCourse.credit_hours as Credit\',\r\n            \'TrainingCourse.duration as Duration\', \'TrainingModeDelivery.name as ModeOfDelivery\',\r\n            \'GROUP_CONCAT(TrainingProvider.name) as Provider\',\'TrainingRequirement.name as Requirement\', \r\n            \'TrainingLevel.name as Level\', \'GROUP_CONCAT(TrainingCoursePrerequisiteCourse.title) as Prerequisite\'\r\n        ),\r\n        \'joins\' => array(\r\n            array(\'table\' => \'training_statuses\',\'alias\' => \'TrainingStatus\',\'type\' => \'LEFT\',\r\n                \'conditions\' => array(\'TrainingStatus.id = TrainingCourse.training_status_id\')\r\n            ),\r\n            array(\'table\' => \'training_mode_deliveries\',\'alias\' => \'TrainingModeDelivery\',\'type\' => \'LEFT\',\r\n                \'conditions\' => array(\'TrainingModeDelivery.id = TrainingCourse.training_mode_delivery_id\')\r\n            ),\r\n            array(\'table\' => \'training_course_providers\',\'alias\' => \'TrainingCourseProvider\',\'type\' => \'LEFT\',\r\n                \'conditions\' => array(\'TrainingCourse.id = TrainingCourseProvider.training_course_id\')\r\n            ),\r\n            array(\'table\' => \'training_providers\',\'alias\' => \'TrainingProvider\',\'type\' => \'LEFT\',\r\n                \'conditions\' => array(\'TrainingProvider.id = TrainingCourseProvider.training_provider_id\')\r\n            ), \r\n            array(\'table\' => \'training_requirements\',\'alias\' => \'TrainingRequirement\',\'type\' => \'LEFT\',\r\n                \'conditions\' => array(\'TrainingRequirement.id = TrainingCourse.training_requirement_id\')\r\n            ), \r\n            array(\'table\' => \'training_levels\',\'alias\' => \'TrainingLevel\',\'type\' => \'LEFT\',\r\n                \'conditions\' => array(\'TrainingLevel.id = TrainingCourse.training_level_id\')\r\n            ), \r\n            array(\'table\' => \'training_course_prerequisites\',\'alias\' => \'TrainingCoursePrerequisite\',\'type\' => \'LEFT\',\r\n                \'conditions\' => array(\'TrainingCourse.id = TrainingCoursePrerequisite.training_course_id\')\r\n            ), \r\n            array(\'table\' => \'training_courses\',\'alias\' => \'TrainingCoursePrerequisiteCourse\',\'type\' => \'LEFT\',\r\n                \'conditions\' => array(\'TrainingCoursePrerequisiteCourse.id = TrainingCoursePrerequisite.training_course_id\')\r\n            )\r\n         ),\r\n        \'group\'=>array(\'TrainingCourse.id\')\r\n        ));','CourseCode,CourseTitle,Status,CourseDescription,GoalObjective,Credit,Duration,ModeOfDelivery,Provider,Requirement,Level,Prerequisite',1,1029,NULL,NULL,1,'0000-00-00 00:00:00'),(1030,'Training Course Completed Report','$this->autoRender = false;\r\n        $TrainingCourse = ClassRegistry::init(\'TrainingCourse\');\r\n        $TrainingCourse->formatResult = true;\r\n        \r\n        $IdentityType = ClassRegistry::init(\'IdentityType\');\r\n        $identityTypes = $IdentityType->find(\'list\', array(\'fields\'=>array(\'id\', \'name\')));\r\n        $fields = array(\'TrainingCourse.code AS CourseCode\',\'TrainingCourse.title AS CourseTitle\',\'GROUP_CONCAT(TrainingProvider.name) as Provider\',\'TrainingCourse.credit_hours AS Credit\', \'TrainingSession.location as Location\', \'TrainingSession.start_date as StartDate\',\r\n                      \'TrainingSession.end_date as EndDate\', \'Staff.identification_no as OpenEmisID\');\r\n        $templateFormat = \'CourseCode,CourseTitle,Provider,Credit,Location,StartDate,EndDate,OpenEmisID%s,FirstName,LastName,Result,Completed\';\r\n        $templateVF = \'\';\r\n        if(!empty($identityTypes)){\r\n            $c = 0;\r\n            foreach($identityTypes as $key=>$val){\r\n                $fields[] = \'(Select StaffIdentity.number from staff_identities as StaffIdentity where TrainingSessionTrainee.staff_id = StaffIdentity.staff_id and StaffIdentity.identity_type_id=\'.$key.\') as `\'.$val.\'`\';\r\n                $templateVF .= \',\'. $val;\r\n            }\r\n        }\r\n\r\n        $templateFormat = sprintf($templateFormat, $templateVF);\r\n        $BatchReport = ClassRegistry::init(\'BatchReport\');\r\n        $BatchReport->id = 1030;\r\n        $BatchReport->saveField(\'template\', $templateFormat);\r\n\r\n        $fields = array_merge($fields, array(\'Staff.first_name as FirstName\', \'Staff.last_name as LastName\', \'TrainingSessionTrainee.result as Result\',\'((CASE WHEN TrainingSessionTrainee.pass=-1 THEN \"-\" WHEN TrainingSessionTrainee.pass=1 THEN \"Passed\" ELSE \"Failed\" END)) AS Completed\'));\r\n        \r\n        $data = $TrainingCourse->find(\'all\',\r\n            array(\'fields\' => $fields,\r\n            \'joins\' => array(\r\n                 array(\'table\' => \'training_sessions\',\'alias\' => \'TrainingSession\',\'type\' => \'INNER\',\r\n                    \'conditions\' => array(\'TrainingCourse.id = TrainingSession.training_course_id\')\r\n                ),\r\n                array(\'table\' => \'training_course_providers\',\'alias\' => \'TrainingCourseProvider\',\'type\' => \'LEFT\',\r\n                    \'conditions\' => array(\'TrainingCourse.id = TrainingCourseProvider.training_course_id\')\r\n                ),\r\n                array(\'table\' => \'training_providers\',\'alias\' => \'TrainingProvider\',\'type\' => \'LEFT\',\r\n                    \'conditions\' => array(\'TrainingProvider.id = TrainingCourseProvider.training_provider_id\')\r\n                ), \r\n                array(\'table\' => \'training_session_trainees\',\'alias\' => \'TrainingSessionTrainee\',\'type\' => \'INNER\',\r\n                    \'conditions\' => array(\'TrainingSession.id = TrainingSessionTrainee.training_session_id\')\r\n                ),\r\n                array(\'table\' => \'staff\',\'alias\' => \'Staff\',\'type\' => \'INNER\',\r\n                    \'conditions\' => array(\'Staff.id = TrainingSessionTrainee.staff_id\')\r\n                    )\r\n                ),\r\n                \'group\' => array(\'TrainingCourse.id\',\'TrainingSessionTrainee.staff_id\'),\r\n                \'order\' =>array(\'TrainingCourse.title\', \'Staff.id\')\r\n                ));','CourseCode,CourseTitle,Provider,Credit,Location,StartDate,EndDate,OpenEmisID,National,School,UNHCR,Passport,UNRWA Ration Card,UNRWA Identity Card,FirstName,LastName,Result,Completed',1,1030,NULL,'2014-10-01 03:41:02',1,'0000-00-00 00:00:00'),(1031,'Staff Training Need Report','$this->autoRender = false;\r\n        $StaffTrainingNeed = ClassRegistry::init(\'StaffTrainingNeed\');\r\n        $StaffTrainingNeed->bindModel(\r\n            array(\'belongsTo\'=>\r\n                array(\r\n                    \'TrainingCourse\' => array(\r\n                    \'className\' => \'TrainingCourse\',\r\n                    \'foreignKey\' => \'ref_course_id\',\r\n                    \'conditions\' => array(\'ref_course_table\' => \'TrainingCourse\'),\r\n                    ),\r\n                    \'TrainingNeedCategory\' => array(\r\n                        \'className\' => \'FieldOptionValue\',\r\n                        \'foreignKey\' => \'ref_course_id\',\r\n                        \'conditions\' => array(\'ref_course_table\' => \'TrainingNeedCategory\'),\r\n                    )\r\n                 )\r\n            )\r\n        );\r\n        $StaffTrainingNeed->formatResult = true;\r\n        $IdentityType = ClassRegistry::init(\'IdentityType\');\r\n        $identityTypes = $IdentityType->find(\'list\', array(\'fields\'=>array(\'id\', \'name\')));\r\n        $fields = array(\'((CASE WHEN StaffTrainingNeed.ref_course_table =\"TrainingNeedCategory\" THEN TrainingNeedCategory.name ELSE \"Course Catalogue\" END)) AS NeedType\',\r\n                      \'StaffTrainingNeed.ref_course_code AS CourseCode\',\'StaffTrainingNeed.ref_course_title AS CourseTitle\',\'StaffTrainingNeed.ref_course_requirement AS Requirement\', \'TrainingPriority.name AS Priority\', \'StaffTrainingNeed.comments AS Comment\', \'Staff.identification_no AS OpenEmisID\');\r\n        $templateFormat = \'NeedType,CourseCode,CourseTitle,Requirement,Priority,Comment,OpenEmisID%s,FirstName,LastName\';\r\n        $templateVF = \'\';\r\n        if(!empty($identityTypes)){\r\n            $c = 0;\r\n            foreach($identityTypes as $key=>$val){\r\n                $fields[] = \'(Select StaffIdentity.number from staff_identities as StaffIdentity where StaffTrainingNeed.staff_id = StaffIdentity.staff_id and StaffIdentity.identity_type_id=\'.$key.\') as `\'.$val.\'`\';\r\n                $templateVF .= \',\'. $val;\r\n            }\r\n        }\r\n       \r\n        $templateFormat = sprintf($templateFormat, $templateVF);\r\n        $BatchReport = ClassRegistry::init(\'BatchReport\');\r\n        $BatchReport->id = 1031;\r\n        $BatchReport->saveField(\'template\', $templateFormat);\r\n        $fields = array_merge($fields, array(\'Staff.first_name as FirstName\', \'Staff.last_name as LastName\'));\r\n    \r\n\r\n        $data = $StaffTrainingNeed->find(\'all\',\r\n        array(\'fields\' => $fields,\r\n            \'joins\' => array(\r\n                array(\'table\' => \'staff\', \'alias\' => \'Staff\', \'type\' => \'INNER\',\r\n                    \'conditions\' => array(\'Staff.id = StaffTrainingNeed.staff_id\')\r\n                ),\r\n                array(\r\n                    \'table\' => \'training_statuses\',\'alias\' => \'TrainingStatus\',\'type\' => \'INNER\',\r\n                    \'conditions\' => array(\'TrainingStatus.id = StaffTrainingNeed.training_status_id\')\r\n                ),\r\n                array(\r\n                    \'table\' => \'training_priorities\',\'alias\' => \'TrainingPriority\',\'type\' => \'INNER\',\r\n                    \'conditions\' => array(\'TrainingPriority.id = StaffTrainingNeed.training_priority_id\')\r\n                )\r\n            ),\r\n            \'conditions\'=> array(\'StaffTrainingNeed.training_status_id\'=>3),\r\n            \'order\' => array(\'StaffTrainingNeed.ref_course_title\')\r\n            ));','NeedType,CourseCode,CourseTitle,Requirement,Priority,Comment,OpenEmisID,National,School,UNHCR,Passport,UNRWA Ration Card,UNRWA Identity Card,FirstName,LastName',1,1031,NULL,'2014-10-01 03:41:02',1,'0000-00-00 00:00:00'),(1032,'Training Course Uncompleted Report','$this->autoRender = false;\r\n        $TrainingCourse = ClassRegistry::init(\'TrainingCourse\');\r\n        $TrainingCourse->formatResult = true;\r\n\r\n        $IdentityType = ClassRegistry::init(\'IdentityType\');\r\n        $identityTypes = $IdentityType->find(\'list\', array(\'fields\'=>array(\'id\', \'name\')));\r\n        $fields = array(\'TrainingCourse.code AS CourseCode\',\'TrainingCourse.title AS CourseTitle\',\'TrainingCourse.credit_hours AS Credit\', \'TrainingSession.location AS Location\',\'Staff.identification_no as OpenEmisID\');\r\n        $templateFormat = \'CourseCode,CourseTitle,Credit,Location,OpenEmisID%s,FirstName,LastName,StartDate,EndDate\';\r\n        $templateVF = \'\';\r\n        if(!empty($identityTypes)){\r\n            $c = 0;\r\n            foreach($identityTypes as $key=>$val){\r\n                $fields[] = \'(Select StaffIdentity.number from staff_identities as StaffIdentity where TrainingSessionTrainee.staff_id = StaffIdentity.staff_id and StaffIdentity.identity_type_id=\'.$key.\') as `\'.$val.\'`\';\r\n                $templateVF .= \',\'. $val;\r\n            }\r\n        }\r\n\r\n        $templateFormat = sprintf($templateFormat, $templateVF);\r\n        $BatchReport = ClassRegistry::init(\'BatchReport\');\r\n        $BatchReport->id = 1032;\r\n        $BatchReport->saveField(\'template\', $templateFormat);\r\n\r\n        $fields = array_merge($fields, array(\'Staff.first_name as FirstName\', \'Staff.last_name as LastName\', \'TrainingSession.start_date AS StartDate\', \'TrainingSession.end_date AS EndDate\'));\r\n\r\n        $data = $TrainingCourse->find(\'all\', \r\n            array(\'fields\' => $fields,\r\n            \'joins\' => array(\r\n                array(\'table\' => \'training_sessions\',\'alias\' => \'TrainingSession\',\'type\' => \'INNER\',\r\n                    \'conditions\' => array(\'TrainingCourse.id = TrainingSession.training_course_id\')\r\n                    ), \r\n                array(\'table\' => \'training_session_trainees\',\'alias\' => \'TrainingSessionTrainee\',\'type\' => \'INNER\',\r\n                     \'conditions\' => array(\'TrainingSession.id = TrainingSessionTrainee.training_session_id\', \'TrainingSession.training_status_id\'=>3)            \r\n                ),\r\n                array(\'table\' => \'training_session_results\',\'alias\' => \'TrainingSessionResult\',\'type\' => \'INNER\',\r\n                    \'conditions\' => array(\'TrainingSession.id = TrainingSessionResult.training_session_id\', \'NOT\' => array(\'TrainingSessionResult.training_status_id\'=>3))\r\n                ), \r\n                array(\'table\' => \'staff\',\'alias\' => \'Staff\',\'type\' => \'INNER\',\r\n                    \'conditions\' => array(\'Staff.id = TrainingSessionTrainee.staff_id\')\r\n                )\r\n            ),\r\n            \'order\' => array(\'TrainingCourse.title\')\r\n        ));','CourseCode,CourseTitle,Credit,Location,OpenEmisID,National,School,UNHCR,Passport,UNRWA Ration Card,UNRWA Identity Card,FirstName,LastName,StartDate,EndDate',1,1032,NULL,'2014-10-01 03:41:03',1,'0000-00-00 00:00:00'),(1033,'Training Trainer Report','$this->autoRender = false;\r\n        $TrainingCourse = ClassRegistry::init(\'TrainingCourse\');\r\n        $TrainingCourse->formatResult = true;\r\n        $data = $TrainingCourse->find(\'all\', \r\n        array(\'fields\' => array(\r\n            \'TrainingSessionTrainer.ref_trainer_name as Trainer\', \r\n            \'((CASE WHEN TrainingSessionTrainer.ref_trainer_table =\"Staff\" THEN \"Internal\"\r\n             ELSE \"External\" END)) AS TrainerType\', \'TrainingCourse.code AS CourseCode\',\r\n            \'TrainingCourse.title AS CourseTitle\',\'TrainingCourse.credit_hours AS Credit\', \r\n            \'TrainingCourse.duration AS Duration\',\'TrainingSession.location AS Location\', \r\n            \'TrainingSession.start_date AS StartDate\', \'TrainingSession.end_date AS EndDate\'\r\n        ),\r\n        \'joins\' => array(\r\n            array(\'table\' => \'training_sessions\',\'alias\' => \'TrainingSession\',\'type\' => \'INNER\',\r\n                \'conditions\' => array(\'TrainingCourse.id = TrainingSession.training_course_id\' , \'TrainingSession.training_status_id\' => 3)\r\n            ),\r\n            array(\'table\' => \'training_session_trainers\',\'alias\' => \'TrainingSessionTrainer\',\'type\' => \'INNER\',\r\n                \'conditions\' => array(\'TrainingSession.id = TrainingSessionTrainer.training_session_id\')\r\n            )\r\n         ),\r\n         \'order\' => array(\'TrainingCourse.title\')\r\n        ));','Trainer,TrainerType,CourseCode,CourseTitle,Credit,Duration,Location,StartDate,EndDate',1,1033,NULL,NULL,1,'0000-00-00 00:00:00'),(1034,'Training Exception Report','\r\n$this->autoRender = false;\r\n        $TrainingCourse = ClassRegistry::init(\'TrainingSessionTrainee\');\r\n        $TrainingCourse->formatResult = true;\r\n\r\n        $IdentityType = ClassRegistry::init(\'IdentityType\');\r\n        $identityTypes = $IdentityType->find(\'list\', array(\'fields\'=>array(\'id\', \'name\')));\r\n        $fields = array(\'Staff.identification_no as OpenEmisID\');\r\n        $templateFormat = \'OpenEmisID%s,FirstName,LastName,Position,CourseCode,CourseTitle,Location,StartDate,EndDate\';\r\n        $templateVF = \'\';\r\n        if(!empty($identityTypes)){\r\n            $c = 0;\r\n            foreach($identityTypes as $key=>$val){\r\n                $fields[] = \'(Select StaffIdentity.number from staff_identities as StaffIdentity where TrainingSessionTrainee.staff_id = StaffIdentity.staff_id and StaffIdentity.identity_type_id=\'.$key.\') as `\'.$val.\'`\';\r\n                $templateVF .= \',\'. $val;\r\n            }\r\n        }\r\n\r\n        $templateFormat = sprintf($templateFormat, $templateVF);\r\n        $BatchReport = ClassRegistry::init(\'BatchReport\');\r\n        $BatchReport->id = 1034;\r\n        $BatchReport->saveField(\'template\', $templateFormat);\r\n\r\n        $fields = array_merge($fields, array(\'Staff.first_name as FirstName\', \'Staff.last_name as LastName\', \'StaffPositionTitle.name as Position\',\r\n                \'TrainingCourse1.code AS CourseCode\',\'TrainingCourse1.title AS CourseTitle\',\'TrainingSession1.location as Location\', \'TrainingSession1.start_date as StartDate\', \'TrainingSession1.end_date as EndDate\'));\r\n        \r\n\r\n        $data = $TrainingCourse->find(\'all\', \r\n            array(\'fields\' => $fields,\r\n            \'joins\' => array(\r\n                array(\r\n                    \'table\' => \'training_sessions\',\'alias\' => \'TrainingSession1\',\'type\' => \'INNER\',\r\n                    \'conditions\' => array(\'TrainingSession1.id = TrainingSessionTrainee.training_session_id\', \'TrainingSession1.training_status_id\'=>3)\r\n                ),\r\n                array(\r\n                    \'table\' => \'training_sessions\',\'alias\' => \'TrainingSession2\',\'type\' => \'INNER\',\r\n                    \'conditions\' => array(\'TrainingSession2.id = TrainingSessionTrainee.training_session_id\', \'TrainingSession2.training_status_id\'=>3)\r\n                ),\r\n                array(\r\n                    \'table\' => \'training_courses\',\'alias\' => \'TrainingCourse1\',\'type\' => \'INNER\',\r\n                    \'conditions\' => array(\'TrainingCourse1.id = TrainingSession1.training_course_id\', \'TrainingCourse1.training_status_id\'=>3)\r\n                ), \r\n                 array(\r\n                    \'table\' => \'training_courses\',\'alias\' => \'TrainingCourse2\',\'type\' => \'INNER\',\r\n                    \'conditions\' => array(\'TrainingCourse2.id = TrainingSession2.training_course_id\', \'TrainingCourse2.training_status_id\'=>3)\r\n                ), \r\n                array(\'table\' => \'staff\',\'alias\' => \'Staff\',\'type\' => \'LEFT\',\r\n                      \'conditions\' => array(\'Staff.id = TrainingSessionTrainee.staff_id\')          \r\n                ), \r\n                array(\'table\' => \'institution_site_staff\',\'alias\' => \'InstitutionSiteStaff\',\'type\' => \'LEFT\',\r\n                    \'conditions\' => array(\'Staff.id = InstitutionSiteStaff.staff_id\')\r\n                ), \r\n                array(\'table\' => \'institution_site_positions\',\'alias\' => \'InstitutionSitePosition\',\'type\' => \'LEFT\',\r\n                    \'conditions\' => array(\'InstitutionSiteStaff.institution_site_position_id = InstitutionSitePosition.id\')\r\n                ), \r\n                array(\'table\' => \'staff_position_titles\',\'alias\' => \'StaffPositionTitle\',\'type\' => \'LEFT\',\r\n                    \'conditions\' => array(\'StaffPositionTitle.id = InstitutionSitePosition.staff_position_title_id\')\r\n                ), \r\n            ),\r\n            \'conditions\' =>  array(\'TrainingSession1.start_date <= TrainingSession2.start_date\', \'TrainingSession1.end_date >= TrainingSession2.start_date\'),\r\n            \'group\' => array(\'TrainingSessionTrainee.staff_id HAVING COUNT(TrainingSessionTrainee.staff_id) > 1\'),\r\n            \'order\' => array(\'TrainingCourse1.title\')));','OpenEmisID,National,School,UNHCR,Passport,UNRWA Ration Card,UNRWA Identity Card,FirstName,LastName,Position,CourseCode,CourseTitle,Location,StartDate,EndDate',1,1034,NULL,'2014-10-01 03:41:03',1,'0000-00-00 00:00:00'),(1035,'Training Staff Statistic Report','$this->autoRender = false;   \r\n            $TrainingCourse = ClassRegistry::init(\'TrainingCourse\');\r\n            $TrainingCourse->formatResult = true;\r\n            \r\n            $data = $TrainingCourse->find(\'all\', \r\n            array(\'fields\' => array(\r\n                \'TrainingCourse.code as CourseCode\', \'TrainingCourse.title as CourseTitle\', \'StaffPositionTitle.name as TargetGroup\', \r\n                \'(Select CASE WHEN COUNT(DISTINCT InstitutionSiteStaff.staff_id) > 0 THEN COUNT(DISTINCT InstitutionSiteStaff.staff_id) ELSE (SELECT COUNT(*) from staff as Staff) END from institution_site_staff as InstitutionSiteStaff INNER JOIN institution_site_positions as InstitutionSitePosition on InstitutionSitePosition.id =  InstitutionSiteStaff.institution_site_position_id WHERE StaffPositionTitle.id = InstitutionSitePosition.staff_position_title_id) as TotalTargetGroup\', \r\n                \'COUNT(DISTINCT TrainingSessionTrainee.staff_id) as TotalTrained\',\r\n                \'round(((COUNT(DISTINCT TrainingSessionTrainee.staff_id)/IFNULL((Select CASE WHEN COUNT(DISTINCT InstitutionSiteStaff.staff_id) > 0 THEN COUNT(DISTINCT InstitutionSiteStaff.staff_id) ELSE (select count(*) from staff as Staff) END from institution_site_staff as InstitutionSiteStaff INNER JOIN institution_site_positions as InstitutionSitePosition on InstitutionSitePosition.id =  InstitutionSiteStaff.institution_site_position_id WHERE StaffPositionTitle.id = InstitutionSitePosition.staff_position_title_id),0)) * 100),2)  as TargetGroupPercentage\'\r\n            ),         \r\n            \'joins\' => array(\r\n                array(\'table\' => \'training_sessions\',\'alias\' => \'TrainingSession\',\'type\' => \'INNER\',\r\n                    \'conditions\' => array(\'TrainingCourse.id = TrainingSession.training_course_id\', \'TrainingSession.training_status_id\'=>3)\r\n                ), \r\n                array(\'table\' => \'training_session_trainees\',\'alias\' => \'TrainingSessionTrainee\',\'type\' => \'LEFT\',\r\n                    \'conditions\' => array(\'TrainingSession.id = TrainingSessionTrainee.training_session_id\')\r\n                ),\r\n                array(\'table\' => \'training_course_target_populations\',\'alias\' => \'TrainingCourseTargetPopulation\',\'type\' => \'LEFT\',\r\n                     \'conditions\' => array(\'TrainingCourse.id = TrainingCourseTargetPopulation.training_course_id\')\r\n                ),        \r\n                array(\'table\' => \'staff_position_titles\',\'alias\' => \'StaffPositionTitle\',\'type\' => \'LEFT\', \r\n                     \'conditions\' => array(\'StaffPositionTitle.id = TrainingCourseTargetPopulation.staff_position_title_id\')\r\n                ), \r\n                array(\'table\' => \'training_session_results\',\'alias\' => \'TrainingSessionResult\',\'type\' => \'LEFT\',\r\n                    \'conditions\' => array(\'TrainingSession.id = TrainingSessionResult.training_session_id\', \'TrainingSessionResult.training_status_id\'=>3)\r\n                ), \r\n             ), \r\n            \'conditions\' => array(\'TrainingCourse.training_status_id\'=>3),\r\n            \'group\' => array(\'TrainingCourse.id\', \'TrainingCourseTargetPopulation.staff_position_title_id\'),\r\n            \'order\' => array(\'TrainingCourse.title\')\r\n            ));','CourseCode,CourseTitle,TargetGroup,TotalTargetGroup,TotalTrained,TargetGroupPercentage',1,1035,NULL,NULL,1,'0000-00-00 00:00:00'),(1038,'Institution Site with No Area Report','$data = $this->InstitutionSite->find(\'all\',\r\n                array(\r\n                    \'fields\'=>array(\'InstitutionSite.Code AS Code\',\'InstitutionSite.name AS InstitutionName\',\'InstitutionSite.address AS Address\',\'InstitutionSite.postal_code AS PostalCode\',\'InstitutionSite.contact_person AS ContactPerson\',\'InstitutionSite.telephone AS Telephone\',\'InstitutionSite.fax AS Fax\',\'InstitutionSite.email AS Email\',\'InstitutionSite.website AS Website\',\'InstitutionSite.date_opened AS DateOpened\',\'InstitutionSite.date_closed AS DateClosed\',\'InstitutionSite.longitude AS Longitude\',\'InstitutionSite.latitude AS Latitude\',\'Area.name AS AreaName\',\'InstitutionSiteLocality.name AS Locality\',\'InstitutionSiteType.name AS SiteType\',\'InstitutionSiteOwnership.name AS Ownership\',\'InstitutionSiteStatus.name AS Status\'),\r\n                    \'conditions\' => array(\'InstitutionSite.area_id = 0 OR InstitutionSite.area_id is null\'),{cond}\r\n\r\n                )\r\n            );','Code,InstitutionName,Address,PostalCode,ContactPerson,Telephone,Fax,Email,Website,DateOpened,DateClosed,Longitude,Latitude,AreaName,Locality,SiteType,Ownership,Status',1,1038,NULL,NULL,1,'0000-00-00 00:00:00'),(2000,'Estimates from Current Student Data','$this->censusAggregateFromStudentRegisters($current_year);',NULL,1,2000,NULL,NULL,1,'0000-00-00 00:00:00'),(2001,'Estimates from Census History','$this->censusShiftPastYearToCurrentYear($current_year,$previous_year);\r$this->censusEstimateGradeForYear($current_year);\r$this->censusEstimateMissingInstitutesforYear($current_year);',NULL,1,2001,NULL,NULL,1,'0000-00-00 00:00:00'),(2002,'Estimates from Census History','$this->populationEstimate();',NULL,1,2011,NULL,NULL,1,'0000-00-00 00:00:00'),(3000,'QA School Report','App::import(\'Model\', \'InstitutionSite\');\n        App::import(\'Model\', \'Quality.QualityBatchReport\');\n\n        $qbr = new QualityBatchReport();\n        $InstitutionSite = new InstitutionSite();\n\n        $fields = $qbr->getLocalSchoolDisplayFieldTable();\n        $joins = $qbr->getLocalSchoolJoinTableData();\n\n\n        $dbo = $InstitutionSite->getDataSource();\n        $queryFinal = $dbo->buildStatement(array(\n            \'fields\' => $fields,\n            \'table\' => $dbo->fullTableName($InstitutionSite),\n            \'alias\' => $InstitutionSite->alias,\n            {cond},\n            \'joins\' => $joins,\n            \'conditions\' => null,\n            \'group\' => array(\'SchoolYear.name\', \'InstitutionSite.id\', \'InstitutionSiteClass.id\',/* \'EducationGrade.id\',*/\'RubricTemplate.id\', \'RubricTemplateHeader.id\'),\n            \'order\' => array(\'SchoolYear.name DESC\', \'InstitutionSite.name\', \'EducationGrade.name\', \'InstitutionSiteClass.name\', \'RubricTemplate.id\', \'RubricTemplateHeader.order\')\n\n            \n                ), $InstitutionSite);\n\n\n        $queryCount = $dbo->buildStatement(array(\n            \'fields\' => array(\'COUNT(*) as TotalCount\'),\n            \'table\' => \'(\' . $queryFinal . \')\',\n            \'alias\' => $InstitutionSite->alias . \'Fliter\',\n            \'limit\' => null,\n            \'offset\' => null,\n            \'joins\' => array(),\n            \'conditions\' => null,\n            \'group\' => null,\n            \'order\' => null\n                ), $InstitutionSite);\n\n        $data = $dbo->fetchAll($queryFinal);\n        pr($data);\n        $data = $qbr->generateQASchoolsReport($data);\n \n        $settings[\'custom3LayerFormat\'] = true;',NULL,1,3000,NULL,NULL,1,'2014-02-24 00:00:00'),(3001,'QA Results Report','App::import(\'Model\', \'InstitutionSite\');\r\n        App::import(\'Model\', \'Quality.QualityBatchReport\');\r\n        $qbr = new QualityBatchReport();\r\n        $InstitutionSite = new InstitutionSite();\r\n\r\n        $fields = $qbr->getResultDisplayFieldTable(\'base\');\r\n        $joins = $qbr->getResultJoinTableData();\r\n\r\n        $dbo = $InstitutionSite->getDataSource();\r\n        $query = $dbo->buildStatement(array(\r\n            \'fields\' => $fields,\r\n            \'table\' => $dbo->fullTableName($InstitutionSite),\r\n            \'alias\' => $InstitutionSite->alias,\r\n            \'limit\' => null,\r\n            \'offset\' => null,\r\n            \'joins\' => $joins,\r\n            \'conditions\' => null,\r\n            \'group\' => array(\'InstitutionSiteClass.id\', \'RubricTemplate.id\'),\r\n            \'order\' => array(/*\'Institution.name\',*/ \'InstitutionSite.name\', \'SchoolYear.name DESC\', \'EducationGrade.name\', \'InstitutionSiteClass.name\', \'RubricTemplate.id\')\r\n                ), $InstitutionSite);\r\n\r\n        $query = \'(\' . $query . \')\';\r\n\r\n        $fields2 = $qbr->getResultDisplayFieldTable(\'search\');\r\n\r\n        $queryFinal = $dbo->buildStatement(array(\r\n            \'fields\' => $fields2,\r\n            \'table\' => $query,\r\n            \'alias\' => $InstitutionSite->alias . \'Fliter\',\r\n            {cond},\r\n            \'joins\' => array(),\r\n            \'conditions\' => null,\r\n            \'group\' => array(\'Year\', \'RubricId\', \'InstitutionSiteId\', \'GradeId\'),\r\n            \'order\' => array(\'InstitutionName\', \'Year DESC\', \'Grade\', \'Class\')\r\n                ), $InstitutionSite);\r\n\r\n\r\n        $queryCount = $dbo->buildStatement(array(\r\n            \'fields\' => array(\'COUNT(*) as TotalCount\'),\r\n            \'table\' => \'(\' . $queryFinal . \')\',\r\n            \'alias\' => $InstitutionSite->alias . \'Fliter\',\r\n            \'limit\' => null,\r\n            \'offset\' => null,\r\n            \'joins\' => array(),\r\n            \'conditions\' => null,\r\n            \'group\' => null,\r\n            \'order\' => null\r\n                ), $InstitutionSite);\r\n\r\n        $data = $dbo->fetchAll($queryFinal);\r\n \r\n        $data = $qbr->generateQAResultReport($data);','Year,InstitutionName,InstitutionCode,Grade,RubricName,TotalClasses,Maximum,Minimum,Average,Pass/Fail',2,3001,NULL,NULL,1,'2014-02-24 00:00:00'),(3002,'QA Rubric Not Completed Report','App::import(\'Model\', \'InstitutionSite\');\r\n        App::import(\'Model\', \'Quality.QualityBatchReport\');\r\n \r\n$settings[\'custom3LayerFormat\'] = true;\r\n\r\n        $qbr = new QualityBatchReport();\r\n        $InstitutionSite = new InstitutionSite();\r\n\r\n        $fields = $qbr->getNotCompleteDisplayFieldTable(\'base\');\r\n        $joins = $qbr->getNotCompleteJoinTableData();\r\n\r\n        $dbo = $InstitutionSite->getDataSource();\r\n        $query = $dbo->buildStatement(array(\r\n            \'fields\' => $fields,\r\n            \'table\' => $dbo->fullTableName($InstitutionSite),\r\n            \'alias\' => $InstitutionSite->alias,\r\n            \'limit\' => null,\r\n            \'offset\' => null,\r\n            \'joins\' => $joins,\r\n            \'conditions\' => null,\r\n            \'group\' => array(\'InstitutionSiteClass.id\', \'RubricTemplate.id\',  \'RubricTemplateSubheader.id\'),\r\n            \'order\' => array(\'SchoolYear.name DESC\', \'InstitutionSite.name\', \'EducationGrade.name\', \'InstitutionSiteClass.name\', \'RubricTemplate.id\', \'RubricTemplateHeader.order\')\r\n                ), $InstitutionSite);\r\n\r\n        $query = \'(\' . $query . \')\';\r\n\r\n        $fields2 = $qbr->getNotCompleteDisplayFieldTable(\'search\');\r\n\r\n        $queryFinal = $dbo->buildStatement(array(\r\n            \'fields\' => $fields2,\r\n            \'table\' => $query,\r\n            \'alias\' => $InstitutionSite->alias . \'Fliter\',\r\n            {cond},\r\n            \'joins\' => array(),\r\n            \'conditions\' => null,\r\n            \'group\' => array(\'ClassId\', \'RubricId HAVING TotalQuestions != TotalAnswered\'),\r\n            \'order\' => null\r\n                ), $InstitutionSite);\r\n\r\n\r\n        $queryCount = $dbo->buildStatement(array(\r\n            \'fields\' => array(\'COUNT(*) as TotalCount\'),\r\n            \'table\' => \'(\' . $queryFinal . \')\',\r\n            \'alias\' => $InstitutionSite->alias . \'Fliter\',\r\n            \'limit\' => null,\r\n            \'offset\' => null,\r\n            \'joins\' => array(),\r\n            \'conditions\' => null,\r\n            \'group\' => null,\r\n            \'order\' => null\r\n                ), $InstitutionSite);\r\n\r\n        $data = $dbo->fetchAll($queryFinal);\r\n\r\n','Year,InstitutionName,InstitutionCode,Grade,Class,StaffName,RubricName,TotalQuestions,TotalAnswered',2,3002,NULL,NULL,1,'2014-02-24 00:00:00');
/*!40000 ALTER TABLE `batch_reports` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2019-02-05 16:33:51
